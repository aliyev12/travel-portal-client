{"version":3,"file":"static/webpack/static/development/pages/index.js.e6d22e682370ee19f319.hot-update.js","sources":["webpack:///./components/home/Spotlights.tsx"],"sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PlaceIcon from \"@material-ui/icons/Place\";\nimport CalendarIcon from \"@material-ui/icons/CalendarToday\";\nimport FlagIcon from \"@material-ui/icons/EmojiFlagsRounded\";\nimport PeopleIcon from \"@material-ui/icons/PeopleOutlineRounded\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport TourCard from \"./TourCard\";\nimport { colors } from \"../utils/styles\";\nimport formatMoney from \"../utils/formatMoney\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\ninterface Props {\n  date: string;\n  place: string;\n  stops: number;\n  people: number;\n  price: number;\n  ratingsAverage: number;\n  ratingsQuantity: number;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    margin: \"1rem 2rem\"\n  },\n  spotlightItem: {\n    display: \"flex\"\n  },\n  icon: {\n    marginRight: \"1rem\",\n    \"& svg\": {\n      width: \"2rem\",\n      height: \"2rem\",\n      color: colors.mainBlue\n    }\n  },\n  text: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"2rem\",\n    fontSize: \"1rem\"\n  },\n  details: {\n    margin: \"2rem 0\"\n  },\n  price: {\n    fontSize: \"1.6rem\"\n  },\n  money: {\n    fontWeight: \"bold\"\n  },\n  per: {},\n  rating: {}\n}));\n\nconst icons = {\n  place: <PlaceIcon />,\n  date: <CalendarIcon />,\n  stops: <FlagIcon />,\n  people: <PeopleIcon />\n};\n\nconst SpotlightItem = ({ icon, text }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      key={1}\n      item\n      xs={6}\n      /*md={6} lg={4}*/ className={classes.spotlightItem}\n    >\n      <div className={classes.icon}>{icon}</div>\n      <div className={classes.text}>{text}</div>\n    </Grid>\n  );\n};\n\nconst Spotlights: React.FC<Props> = ({\n  date,\n  place,\n  stops,\n  people,\n  price,\n  ratingsAverage,\n  ratingsQuantity\n}) => {\n  const [value, setValue] = React.useState(2);\n  const classes = useStyles();\n\n  const infoContent = {\n    place: {\n      icon: <PlaceIcon />,\n      text: place\n    },\n    date: {\n      icon: <CalendarIcon />,\n      text: date\n    },\n    stops: {\n      icon: <FlagIcon />,\n      text: `${stops} stop${stops === 1 ? \"\" : \"s\"}`\n    },\n    people: {\n      icon: <PeopleIcon />,\n      text: `${people} ${people === 1 ? \"person\" : \"people\"}`\n    }\n  };\n\n  const spotLights = [\n    <SpotlightItem {...infoContent.place} key=\"place\" />,\n    <SpotlightItem {...infoContent.date} key=\"date\" />,\n    <SpotlightItem {...infoContent.stops} key=\"stops\" />,\n    <SpotlightItem {...infoContent.people} key=\"people\" />\n  ];\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        {spotLights}\n      </Grid>\n      <div className={classes.details}>\n        <div className={classes.price}>\n          <span className={classes.money}>{formatMoney(price)}</span>\n          <span className={classes.per}> per person</span>\n        </div>\n        <div className={classes.rating}>\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Typography component=\"legend\">\n              {ratingsAverage} rating({ratingsQuantity})\n            </Typography>\n            {/* <Rating name=\"half-rating\" value={ratingsAverage} readOnly /> */}\n            <Rating\n              name=\"half-rating\"\n              defaultValue={2.5}\n              precision={0.5}\n              readOnly\n            />\n          </Box>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Spotlights;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAYA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AAhCA;AAAA;AAmCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAMA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAbA;AAmBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}