{"version":3,"file":"static/webpack/static/development/pages/tour/[slug].js.76b09afee663802ec6a9.hot-update.js","sources":["webpack:///./components/home/TourCards.tsx"],"sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport TourCard from \"./TourCard\";\nimport Loader from \"../common/Loader\";\n\nexport const TourFragment = gql`\n  fragment TourFragment on Tour {\n    id\n    slug\n    name\n    price\n    rating\n    description\n    ratingsAverage\n    ratingsQuantity\n    duration\n    createdAt\n    images\n    maxGroupSize\n    summary\n    imageCover\n    difficulty\n    startDates\n    guides {\n      id\n      role\n      name\n      email\n      photo\n      createdAt\n      updatedAt\n    }\n    startLocation {\n      description\n      address\n      coordinates\n      type\n    }\n    locations {\n      _id\n      description\n      day\n      coordinates\n      type\n    }\n  }\n`;\n\nconst ALL_TOURS = gql`\n  query ALL_TOURS {\n    getAllTours {\n      ...TourFragment\n    }\n  }\n  ${TourFragment}\n`;\n\ninterface Props {}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  }\n}));\n\nconst TourCards: React.FC<Props> = () => {\n  const { loading, error, data } = useQuery(ALL_TOURS);\n  const classes = useStyles();\n\n  if (loading) return <Loader />;\n\n  const { getAllTours } = data;\n\n  return (\n    <Grid container spacing={3}>\n      {getAllTours &&\n        getAllTours.length &&\n        getAllTours.map(tour => {\n          return <TourCard key={tour.id} {...tour} />;\n        })}\n    </Grid>\n  );\n};\n\nexport default TourCards;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA2CA;AAWA;AAAA;AACA;AACA;AADA;AADA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;;;;A","sourceRoot":""}