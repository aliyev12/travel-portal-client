{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/abdulaliyev/web-projects/travel-portal/client/components/home/Actions.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport red from \"@material-ui/core/colors/red\"; // import { ButtonLink } from \"../common/ButtonLink\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"next/link\";\n/**\n * We need to Omit from the MUI Button the {href} prop\n * as we have to handle routing with Next.js Router\n * so we block the possibility to specify an href.\n */\n\nconst ButtonLink = React.forwardRef((_ref, ref) => {\n  let {\n    href,\n    as,\n    prefetch\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"href\", \"as\", \"prefetch\"]);\n\n  return __jsx(Link, {\n    href: href,\n    as: as,\n    prefetch: prefetch,\n    passHref: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Button, _extends({\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n});\nButtonLink.displayName = \"ButtonLink\";\nconst useStyles = makeStyles(theme => ({\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  detailsBtn: {\n    marginLeft: \"1rem\"\n  },\n  like: {},\n  liked: {\n    \"& svg\": {\n      color: red[500]\n    }\n  },\n  anchor: {}\n}));\n\nconst Actions = ({\n  handleExpandClick,\n  expanded,\n  slug\n}) => {\n  const classes = useStyles();\n  const [liked, setLiked] = React.useState(false);\n\n  const ButtonLink = ({\n    children\n  }) => __jsx(Link, {\n    href: \"/tour/[slug]\",\n    as: `tour/${slug}`,\n    prefetch: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: classes.anchor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, children));\n\n  return __jsx(CardActions, {\n    disableSpacing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    onClick: () => setLiked(l => !l),\n    className: clsx(classes.like, {\n      [classes.liked]: liked\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(FavoriteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), __jsx(IconButton, {\n    \"aria-label\": \"share\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(ShareIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), __jsx(Button, {\n    component: ButtonLink // className={classes.detailsBtn}\n    ,\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Details\"), __jsx(IconButton, {\n    className: clsx(classes.expand, {\n      [classes.expandOpen]: expanded\n    }),\n    onClick: handleExpandClick,\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"show more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })));\n};\n\nexport default Actions;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/travel-portal/client/components/home/Actions.tsx"],"names":["React","makeStyles","clsx","CardActions","IconButton","FavoriteIcon","ShareIcon","ExpandMoreIcon","red","Button","Link","ButtonLink","forwardRef","ref","href","as","prefetch","props","displayName","useStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","detailsBtn","like","liked","color","anchor","Actions","handleExpandClick","expanded","slug","classes","setLiked","useState","children","l"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,GAAP,MAAgB,8BAAhB,C,CACA;;AACA,OAAOC,MAAP,MAAoC,0BAApC;AACA,OAAOC,IAAP,MAAgC,WAAhC;AAEA;;;;;;AASA,MAAMC,UAAU,GAAGX,KAAK,CAACY,UAAN,CACjB,OAAmCC,GAAnC;AAAA,MAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,EAAR;AAAYC,IAAAA;AAAZ,GAAD;AAAA,MAA0BC,KAA1B;;AAAA,SACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,IAAZ;AAAkB,IAAA,EAAE,EAAEC,EAAtB;AAA0B,IAAA,QAAQ,EAAEC,QAApC;AAA8C,IAAA,QAAQ,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEH;AAAb,KAAsBI,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAAA,CADiB,CAAnB;AAQAN,UAAU,CAACO,WAAX,GAAyB,YAAzB;AAQA,MAAMC,SAAS,GAAGlB,UAAU,CAACmB,KAAK,KAAK;AACrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE,cADL;AAENC,IAAAA,UAAU,EAAE,MAFN;AAGNC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyB,WAAzB,EAAsC;AAChDC,MAAAA,QAAQ,EAAEP,KAAK,CAACK,WAAN,CAAkBE,QAAlB,CAA2BC;AADW,KAAtC;AAHN,GAD6B;AAQrCC,EAAAA,UAAU,EAAE;AACVP,IAAAA,SAAS,EAAE;AADD,GARyB;AAWrCQ,EAAAA,UAAU,EAAE;AACVP,IAAAA,UAAU,EAAE;AADF,GAXyB;AAcrCQ,EAAAA,IAAI,EAAE,EAd+B;AAerCC,EAAAA,KAAK,EAAE;AACL,aAAS;AACPC,MAAAA,KAAK,EAAEzB,GAAG,CAAC,GAAD;AADH;AADJ,GAf8B;AAoBrC0B,EAAAA,MAAM,EAAE;AApB6B,CAAL,CAAN,CAA5B;;AAuBA,MAAMC,OAAwB,GAAG,CAAC;AAAEC,EAAAA,iBAAF;AAAqBC,EAAAA,QAArB;AAA+BC,EAAAA;AAA/B,CAAD,KAA2C;AAC1E,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AACA,QAAM,CAACa,KAAD,EAAQQ,QAAR,IAAoBxC,KAAK,CAACyC,QAAN,CAAe,KAAf,CAA1B;;AAEA,QAAM9B,UAAU,GAAG,CAAC;AAAE+B,IAAAA;AAAF,GAAD,KACjB,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,cAAZ;AAA4B,IAAA,EAAE,EAAG,QAAOJ,IAAK,EAA7C;AAAgD,IAAA,QAAQ,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEC,OAAO,CAACL,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BQ,QAA/B,CADF,CADF;;AAMA,SACE,MAAC,WAAD;AAAa,IAAA,cAAc,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,kBAAW,kBADb;AAEE,IAAA,OAAO,EAAE,MAAMF,QAAQ,CAACG,CAAC,IAAI,CAACA,CAAP,CAFzB;AAGE,IAAA,SAAS,EAAEzC,IAAI,CAACqC,OAAO,CAACR,IAAT,EAAe;AAC5B,OAACQ,OAAO,CAACP,KAAT,GAAiBA;AADW,KAAf,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,EAUE,MAAC,UAAD;AAAY,kBAAW,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,EAcE,MAAC,MAAD;AACE,IAAA,SAAS,EAAErB,UADb,CAEE;AAFF;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF,EA6BE,MAAC,UAAD;AACE,IAAA,SAAS,EAAET,IAAI,CAACqC,OAAO,CAAClB,MAAT,EAAiB;AAC9B,OAACkB,OAAO,CAACV,UAAT,GAAsBQ;AADQ,KAAjB,CADjB;AAIE,IAAA,OAAO,EAAED,iBAJX;AAKE,qBAAeC,QALjB;AAME,kBAAW,WANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CA7BF,CADF;AA0CD,CApDD;;AAsDA,eAAeF,OAAf","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport red from \"@material-ui/core/colors/red\";\n// import { ButtonLink } from \"../common/ButtonLink\";\nimport Button, { ButtonProps } from \"@material-ui/core/Button\";\nimport Link, { LinkProps } from \"next/link\";\n\n/**\n * We need to Omit from the MUI Button the {href} prop\n * as we have to handle routing with Next.js Router\n * so we block the possibility to specify an href.\n */\n\nexport type ButtonLinkProps = Omit<ButtonProps, \"href\" | \"classes\"> &\n  Pick<LinkProps, \"href\" | \"as\" | \"prefetch\">;\n\nconst ButtonLink = React.forwardRef<ButtonLinkProps, any>(\n  ({ href, as, prefetch, ...props }, ref) => (\n    <Link href={href} as={as} prefetch={prefetch} passHref>\n      <Button ref={ref} {...props} />\n    </Link>\n  )\n);\n\nButtonLink.displayName = \"ButtonLink\";\n\ninterface Props {\n  handleExpandClick: () => void;\n  expanded: boolean;\n  slug: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  detailsBtn: {\n    marginLeft: \"1rem\"\n  },\n  like: {},\n  liked: {\n    \"& svg\": {\n      color: red[500]\n    }\n  },\n  anchor: {}\n}));\n\nconst Actions: React.FC<Props> = ({ handleExpandClick, expanded, slug }) => {\n  const classes = useStyles();\n  const [liked, setLiked] = React.useState(false);\n\n  const ButtonLink = ({ children }) => (\n    <Link href={\"/tour/[slug]\"} as={`tour/${slug}`} prefetch>\n      <a className={classes.anchor}>{children}</a>\n    </Link>\n  );\n\n  return (\n    <CardActions disableSpacing>\n      <IconButton\n        aria-label=\"add to favorites\"\n        onClick={() => setLiked(l => !l)}\n        className={clsx(classes.like, {\n          [classes.liked]: liked\n        })}\n      >\n        <FavoriteIcon />\n      </IconButton>\n      <IconButton aria-label=\"share\">\n        <ShareIcon />\n      </IconButton>\n      {/* <Button component={ButtonLink} href={'/foo'}>bar</Button> */}\n      <Button\n        component={ButtonLink}\n        // className={classes.detailsBtn}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Details\n      </Button>\n      {/* <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.detailsBtn}\n      >\n        Details\n      </Button> */}\n      <IconButton\n        className={clsx(classes.expand, {\n          [classes.expandOpen]: expanded\n        })}\n        onClick={handleExpandClick}\n        aria-expanded={expanded}\n        aria-label=\"show more\"\n      >\n        <ExpandMoreIcon />\n      </IconButton>\n    </CardActions>\n  );\n};\n\nexport default Actions;\n"]},"metadata":{},"sourceType":"module"}