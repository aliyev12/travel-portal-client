{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Map.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport ReactMapGL from \"react-map-gl\";\n/*\n.marker {\n  background-image: url('../img/pin.png');\n  background-size: cover;\n  width: 32px;\n  height: 40px;\n  cursor: pointer;\n}\n\n.mapboxgl-popup {\n  max-width: 25rem;\n}\n\n.mapboxgl-popup-content {\n  text-align: center;\n  font-family: 'Lato', sans-serif;\n  padding: 1.5rem !important;\n  font-size: 1.4rem;\n  -webkit-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n}\n*/\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    Map: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      margin: \"5rem 0\",\n      width: \"100%\",\n      position: \"relative\",\n      height: \"65rem\"\n    },\n    map: {\n      position: \"absolute\",\n      top: \"0\",\n      right: \"0\",\n      left: \"0\",\n      bottom: \"0\",\n      width: \"100%\"\n    }\n  };\n});\nvar geojson = {\n  type: \"FeatureCollection\",\n  features: [{\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-112.987418, 37.198125]\n    },\n    properties: {\n      description: \"Zion Canyon National Park\"\n    }\n  }, {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-111.376161, 36.86438]\n    },\n    properties: {\n      description: \"Antelope Canyon\"\n    }\n  }, {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-112.115763, 36.058973]\n    },\n    properties: {\n      description: \"Grand Canyon National Park\"\n    }\n  }, {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-116.107963, 34.011646]\n    },\n    properties: {\n      description: \"Joshua Tree National Park\"\n    }\n  }]\n};\n\nvar Map = function Map() {\n  var classes = useStyles(); // const [lng, seLng] = React.useState(5);\n  // const [lat, setLat] = React.useState(34);\n  // const [zoom, setZoom] = React.useState(2);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      map = _React$useState2[0],\n      setMap = _React$useState2[1];\n\n  var mapContainer = React.useRef(null);\n  React.useEffect(function () {\n    mapboxgl.accessToken = \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n\n    var initializeMap = function initializeMap(_ref) {\n      var setMap = _ref.setMap,\n          mapContainer = _ref.mapContainer;\n      var map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        // stylesheet location\n        center: [0, 0],\n        zoom: 5\n      });\n      map.on(\"load\", function () {\n        setMap(map);\n        map.resize();\n      });\n    };\n\n    if (!map) initializeMap({\n      setMap: setMap,\n      mapContainer: mapContainer\n    });\n  }, [map]); // const map = new mapboxgl.Map({\n  //   container: mapContainer,\n  //   scrollZoom: false,\n  //   style: \"mapbox://styles/mapbox/streets-v11\",\n  //   center: [state.lng, state.lat],\n  //   zoom: state.zoom\n  // });\n  // map.on(\"move\", () => {\n  //   seLng(map.getCenter().lng.toFixed(4));\n  //   setLat(map.getCenter().lat.toFixed(4));\n  //   setZoom(map.getZoom().toFixed(2));\n  // });\n  // const bounds = new mapboxgl.LngLatBounds();\n  // geojson.features.forEach(function(marker) {\n  //   var el = document.createElement(\"div\");\n  //   el.className = \"marker\";\n  //   new mapboxgl.Marker({\n  //     element: el,\n  //     anchor: \"bottom\"\n  //   })\n  //     .setLngLat(marker.geometry.coordinates)\n  //     .addTo(map);\n  //   new mapboxgl.Popup({\n  //     offset: 30,\n  //     closeOnClick: false\n  //   })\n  //     .setLngLat(marker.geometry.coordinates)\n  //     .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n  //     .addTo(map);\n  //   bounds.extend(marker.geometry.coordinates);\n  // });\n  // map.fitBounds(bounds, {\n  //   padding: {\n  //     top: 200,\n  //     bottom: 150,\n  //     left: 50,\n  //     right: 50\n  //   }\n  // });\n  // map.on(\"load\", function() {\n  //   map.addLayer({\n  //     id: \"route\",\n  //     type: \"line\",\n  //     source: {\n  //       type: \"geojson\",\n  //       data: {\n  //         type: \"Feature\",\n  //         properties: {},\n  //         geometry: {\n  //           type: \"LineString\",\n  //           coordinates: [\n  //             [-112.987418, 37.198125],\n  //             [-111.376161, 36.86438],\n  //             [-112.115763, 36.058973],\n  //             [-116.107963, 34.011646]\n  //           ]\n  //         }\n  //       }\n  //     },\n  //     layout: {\n  //       \"line-join\": \"round\",\n  //       \"line-cap\": \"round\"\n  //     },\n  //     paint: {\n  //       \"line-color\": \"#55c57a\",\n  //       \"line-opacity\": 0.6,\n  //       \"line-width\": 3\n  //     }\n  //   });\n  // });\n\n  return __jsx(\"div\", {\n    className: classes.Map,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    ref: function ref(el) {\n      return mapContainer.current = el;\n    },\n    className: classes.map,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }));\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Map.js"],"names":["React","Component","mapboxgl","makeStyles","ReactMapGL","useStyles","theme","Map","display","justifyContent","alignItems","margin","width","position","height","map","top","right","left","bottom","geojson","type","features","geometry","coordinates","properties","description","classes","useState","setMap","mapContainer","useRef","useEffect","accessToken","initializeMap","container","current","style","center","zoom","on","resize","el"],"mappings":"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,KAAD,CAAb;AACX,GAlBD,EAkBG,CAACf,GAAD,CAlBH,EARgB,CA4BhB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE;AAAK,IAAA,SAAS,EAAEY,OAAO,CAACpB,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBE;AAAK,IAAA,GAAG,EAAE,aAAAmC,EAAE;AAAA,aAAKZ,YAAY,CAACM,OAAb,GAAuBM,EAA5B;AAAA,KAAZ;AAA6C,IAAA,SAAS,EAAEf,OAAO,CAACZ,GAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADF;AAyBD,CApID;;AAsIA,eAAeR,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nimport ReactMapGL from \"react-map-gl\";\n\n/*\n.marker {\n  background-image: url('../img/pin.png');\n  background-size: cover;\n  width: 32px;\n  height: 40px;\n  cursor: pointer;\n}\n\n.mapboxgl-popup {\n  max-width: 25rem;\n}\n\n.mapboxgl-popup-content {\n  text-align: center;\n  font-family: 'Lato', sans-serif;\n  padding: 1.5rem !important;\n  font-size: 1.4rem;\n  -webkit-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n}\n*/\n\nconst useStyles = makeStyles(theme => ({\n  Map: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"5rem 0\",\n    width: \"100%\",\n    position: \"relative\",\n    height: \"65rem\"\n  },\n  map: {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    left: \"0\",\n    bottom: \"0\",\n    width: \"100%\"\n  }\n}));\n\nconst geojson = {\n  type: \"FeatureCollection\",\n  features: [\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-112.987418, 37.198125]\n      },\n      properties: {\n        description: \"Zion Canyon National Park\"\n      }\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-111.376161, 36.86438]\n      },\n      properties: {\n        description: \"Antelope Canyon\"\n      }\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-112.115763, 36.058973]\n      },\n      properties: {\n        description: \"Grand Canyon National Park\"\n      }\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-116.107963, 34.011646]\n      },\n      properties: {\n        description: \"Joshua Tree National Park\"\n      }\n    }\n  ]\n};\n\nconst Map = () => {\n  const classes = useStyles();\n  // const [lng, seLng] = React.useState(5);\n  // const [lat, setLat] = React.useState(34);\n  // const [zoom, setZoom] = React.useState(2);\n  const [map, setMap] = React.useState(null);\n  const mapContainer = React.useRef(null);\n\n  React.useEffect(() => {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n    const initializeMap = ({ setMap, mapContainer }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n        center: [0, 0],\n        zoom: 5\n      });\n\n      map.on(\"load\", () => {\n        setMap(map);\n        map.resize();\n      });\n    };\n\n    if (!map) initializeMap({ setMap, mapContainer });\n  }, [map]);\n\n  // const map = new mapboxgl.Map({\n  //   container: mapContainer,\n  //   scrollZoom: false,\n  //   style: \"mapbox://styles/mapbox/streets-v11\",\n  //   center: [state.lng, state.lat],\n  //   zoom: state.zoom\n  // });\n\n  // map.on(\"move\", () => {\n  //   seLng(map.getCenter().lng.toFixed(4));\n  //   setLat(map.getCenter().lat.toFixed(4));\n  //   setZoom(map.getZoom().toFixed(2));\n  // });\n\n  // const bounds = new mapboxgl.LngLatBounds();\n\n  // geojson.features.forEach(function(marker) {\n  //   var el = document.createElement(\"div\");\n  //   el.className = \"marker\";\n\n  //   new mapboxgl.Marker({\n  //     element: el,\n  //     anchor: \"bottom\"\n  //   })\n  //     .setLngLat(marker.geometry.coordinates)\n  //     .addTo(map);\n\n  //   new mapboxgl.Popup({\n  //     offset: 30,\n  //     closeOnClick: false\n  //   })\n  //     .setLngLat(marker.geometry.coordinates)\n  //     .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n  //     .addTo(map);\n\n  //   bounds.extend(marker.geometry.coordinates);\n  // });\n\n  // map.fitBounds(bounds, {\n  //   padding: {\n  //     top: 200,\n  //     bottom: 150,\n  //     left: 50,\n  //     right: 50\n  //   }\n  // });\n\n  // map.on(\"load\", function() {\n  //   map.addLayer({\n  //     id: \"route\",\n  //     type: \"line\",\n  //     source: {\n  //       type: \"geojson\",\n  //       data: {\n  //         type: \"Feature\",\n  //         properties: {},\n  //         geometry: {\n  //           type: \"LineString\",\n  //           coordinates: [\n  //             [-112.987418, 37.198125],\n  //             [-111.376161, 36.86438],\n  //             [-112.115763, 36.058973],\n  //             [-116.107963, 34.011646]\n  //           ]\n  //         }\n  //       }\n  //     },\n  //     layout: {\n  //       \"line-join\": \"round\",\n  //       \"line-cap\": \"round\"\n  //     },\n  //     paint: {\n  //       \"line-color\": \"#55c57a\",\n  //       \"line-opacity\": 0.6,\n  //       \"line-width\": 3\n  //     }\n  //   });\n  // });\n\n  return (\n    <div className={classes.Map}>\n      {/* <div\n          className=\"sidebarStyle\"\n          style={{\n            display: \"inline-block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: \"12px\",\n            backgroundColor: \"#404040\",\n            color: \"#ffffff\",\n            zIndex: \"1 !important\",\n            padding: \"6px\",\n            fontWeight: \"bold\"\n          }}\n        >\n          <div>\n            Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n            {this.state.zoom}\n          </div>\n        </div> */}\n      <div ref={el => (mapContainer.current = el)} className={classes.map} />\n    </div>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}