{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Map.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport mapboxgl from \"mapbox-gl\"; // pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\n\nmapboxgl.accessToken = \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\"; // const geojson = {\n//   type: \"FeatureCollection\",\n//   features: [\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.987418, 37.198125]\n//       },\n//       properties: {\n//         description: \"Zion Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-111.376161, 36.86438]\n//       },\n//       properties: {\n//         description: \"Antelope Canyon\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.115763, 36.058973]\n//       },\n//       properties: {\n//         description: \"Grand Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-116.107963, 34.011646]\n//       },\n//       properties: {\n//         description: \"Joshua Tree National Park\"\n//       }\n//     }\n//   ]\n// };\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"mapRef\", React.createRef());\n\n    this.state = {\n      lng: 5,\n      lat: 34,\n      zoom: 1.5\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      scrollZoom: false,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    map.on(\"move\", () => {\n      const {\n        lng,\n        lat\n      } = map.getCenter();\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    }); // const bounds = new mapboxgl.LngLatBounds();\n    // geojson.features.forEach(function(marker) {\n    //   var el = document.createElement(\"div\");\n    //   el.className = \"marker\";\n    //   new mapboxgl.Marker({\n    //     element: el,\n    //     anchor: \"bottom\"\n    //   })\n    //     .setLngLat(marker.geometry.coordinates)\n    //     .addTo(map);\n    //   new mapboxgl.Popup({\n    //     offset: 30,\n    //     closeOnClick: false\n    //   })\n    //     .setLngLat(marker.geometry.coordinates)\n    //     .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n    //     .addTo(map);\n    //   bounds.extend(marker.geometry.coordinates);\n    // });\n    // map.fitBounds(bounds, {\n    //   padding: {\n    //     top: 200,\n    //     bottom: 150,\n    //     left: 50,\n    //     right: 50\n    //   }\n    // });\n    // map.on(\"load\", function() {\n    //   map.addLayer({\n    //     id: \"route\",\n    //     type: \"line\",\n    //     source: {\n    //       type: \"geojson\",\n    //       data: {\n    //         type: \"Feature\",\n    //         properties: {},\n    //         geometry: {\n    //           type: \"LineString\",\n    //           coordinates: [\n    //             [-112.987418, 37.198125],\n    //             [-111.376161, 36.86438],\n    //             [-112.115763, 36.058973],\n    //             [-116.107963, 34.011646]\n    //           ]\n    //         }\n    //       }\n    //     },\n    //     layout: {\n    //       \"line-join\": \"round\",\n    //       \"line-cap\": \"round\"\n    //     },\n    //     paint: {\n    //       \"line-color\": \"#55c57a\",\n    //       \"line-opacity\": 0.6,\n    //       \"line-width\": 3\n    //     }\n    //   });\n    // });\n  } // render() {\n  //   return (\n  //     <div>\n  //       <div\n  //         ref={el => (this.mapContainer = el)}\n  //         className=\"mapContainer\"\n  //         style={{\n  //           position: \"absolute\",\n  //           top: \"0\",\n  //           right: \"0\",\n  //           left: \"0\",\n  //           bottom: \"0\"\n  //         }}\n  //       />\n  //     </div>\n  //   );\n  // }\n\n\n  render() {\n    const {\n      lng,\n      lat,\n      zoom\n    } = this.state;\n    return __jsx(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"65rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"sidebarStyle\",\n      style: {\n        display: \"inline-block\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        margin: \"12px\",\n        backgroundColor: \"#404040\",\n        color: \"#ffffff\",\n        zIndex: \"1 !important\",\n        padding: \"6px\",\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, `Longitude: ${lng} Latitude: ${lat} Zoom: ${zoom}`)), __jsx(\"div\", {\n      // ref={el => (this.mapContainer = el)}\n      ref: this.mapRef,\n      className: \"mapContainer\",\n      style: {\n        position: \"absolute\",\n        top: \"0\",\n        right: \"0\",\n        left: \"0\",\n        bottom: \"0\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Map; // import React, { Component } from \"react\";\n// import mapboxgl from \"mapbox-gl\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import \"mapbox-gl/dist/mapbox-gl.css\";\n// import ReactMapGL from 'react-map-gl';\n// /*\n// .marker {\n//   background-image: url('../img/pin.png');\n//   background-size: cover;\n//   width: 32px;\n//   height: 40px;\n//   cursor: pointer;\n// }\n// .mapboxgl-popup {\n//   max-width: 25rem;\n// }\n// .mapboxgl-popup-content {\n//   text-align: center;\n//   font-family: 'Lato', sans-serif;\n//   padding: 1.5rem !important;\n//   font-size: 1.4rem;\n//   -webkit-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n//   box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n// }\n// */\n// const useStyles = makeStyles(theme => ({\n//   Map: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     margin: \"5rem 0\",\n//     width: \"100%\",\n//     position: \"relative\",\n//     height: \"65rem\"\n//   },\n//   map: {\n//     position: \"absolute\",\n//     top: \"0\",\n//     right: \"0\",\n//     left: \"0\",\n//     bottom: \"0\",\n//     width: \"100%\"\n//   }\n// }));\n// const geojson = {\n//   type: \"FeatureCollection\",\n//   features: [\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.987418, 37.198125]\n//       },\n//       properties: {\n//         description: \"Zion Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-111.376161, 36.86438]\n//       },\n//       properties: {\n//         description: \"Antelope Canyon\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.115763, 36.058973]\n//       },\n//       properties: {\n//         description: \"Grand Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-116.107963, 34.011646]\n//       },\n//       properties: {\n//         description: \"Joshua Tree National Park\"\n//       }\n//     }\n//   ]\n// };\n// const Map = () => {\n//   const classes = useStyles();\n//   // const [lng, seLng] = React.useState(5);\n//   // const [lat, setLat] = React.useState(34);\n//   // const [zoom, setZoom] = React.useState(2);\n//   const [map, setMap] = React.useState(null);\n//   const mapContainer = React.useRef(null);\n//   React.useEffect(() => {\n//     mapboxgl.accessToken =\n//       \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n//     const initializeMap = ({ setMap, mapContainer }) => {\n//       const map = new mapboxgl.Map({\n//         container: mapContainer.current,\n//         style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n//         center: [0, 0],\n//         zoom: 5\n//       });\n//       map.on(\"load\", () => {\n//         setMap(map);\n//         map.resize();\n//       });\n//     };\n//     if (!map) initializeMap({ setMap, mapContainer });\n//   }, [map]);\n//   // const map = new mapboxgl.Map({\n//   //   container: mapContainer,\n//   //   scrollZoom: false,\n//   //   style: \"mapbox://styles/mapbox/streets-v11\",\n//   //   center: [state.lng, state.lat],\n//   //   zoom: state.zoom\n//   // });\n//   // map.on(\"move\", () => {\n//   //   seLng(map.getCenter().lng.toFixed(4));\n//   //   setLat(map.getCenter().lat.toFixed(4));\n//   //   setZoom(map.getZoom().toFixed(2));\n//   // });\n//   // const bounds = new mapboxgl.LngLatBounds();\n//   // geojson.features.forEach(function(marker) {\n//   //   var el = document.createElement(\"div\");\n//   //   el.className = \"marker\";\n//   //   new mapboxgl.Marker({\n//   //     element: el,\n//   //     anchor: \"bottom\"\n//   //   })\n//   //     .setLngLat(marker.geometry.coordinates)\n//   //     .addTo(map);\n//   //   new mapboxgl.Popup({\n//   //     offset: 30,\n//   //     closeOnClick: false\n//   //   })\n//   //     .setLngLat(marker.geometry.coordinates)\n//   //     .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n//   //     .addTo(map);\n//   //   bounds.extend(marker.geometry.coordinates);\n//   // });\n//   // map.fitBounds(bounds, {\n//   //   padding: {\n//   //     top: 200,\n//   //     bottom: 150,\n//   //     left: 50,\n//   //     right: 50\n//   //   }\n//   // });\n//   // map.on(\"load\", function() {\n//   //   map.addLayer({\n//   //     id: \"route\",\n//   //     type: \"line\",\n//   //     source: {\n//   //       type: \"geojson\",\n//   //       data: {\n//   //         type: \"Feature\",\n//   //         properties: {},\n//   //         geometry: {\n//   //           type: \"LineString\",\n//   //           coordinates: [\n//   //             [-112.987418, 37.198125],\n//   //             [-111.376161, 36.86438],\n//   //             [-112.115763, 36.058973],\n//   //             [-116.107963, 34.011646]\n//   //           ]\n//   //         }\n//   //       }\n//   //     },\n//   //     layout: {\n//   //       \"line-join\": \"round\",\n//   //       \"line-cap\": \"round\"\n//   //     },\n//   //     paint: {\n//   //       \"line-color\": \"#55c57a\",\n//   //       \"line-opacity\": 0.6,\n//   //       \"line-width\": 3\n//   //     }\n//   //   });\n//   // });\n//   return (\n//     <div className={classes.Map}>\n//       {/* <div\n//           className=\"sidebarStyle\"\n//           style={{\n//             display: \"inline-block\",\n//             position: \"absolute\",\n//             top: 0,\n//             left: 0,\n//             margin: \"12px\",\n//             backgroundColor: \"#404040\",\n//             color: \"#ffffff\",\n//             zIndex: \"1 !important\",\n//             padding: \"6px\",\n//             fontWeight: \"bold\"\n//           }}\n//         >\n//           <div>\n//             Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n//             {this.state.zoom}\n//           </div>\n//         </div> */}\n//       <div ref={el => (mapContainer.current = el)} className={classes.map} />\n//     </div>\n//   );\n// };\n// export default Map;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Map.js"],"names":["React","Component","mapboxgl","accessToken","Map","constructor","props","createRef","state","lng","lat","zoom","componentDidMount","map","container","mapContainer","scrollZoom","style","center","on","getCenter","setState","toFixed","getZoom","render","position","height","display","top","left","margin","backgroundColor","color","zIndex","padding","fontWeight","mapRef","right","bottom","width"],"mappings":"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":["import React, { Component } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\n// pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n\n// const geojson = {\n//   type: \"FeatureCollection\",\n//   features: [\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.987418, 37.198125]\n//       },\n//       properties: {\n//         description: \"Zion Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-111.376161, 36.86438]\n//       },\n//       properties: {\n//         description: \"Antelope Canyon\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.115763, 36.058973]\n//       },\n//       properties: {\n//         description: \"Grand Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-116.107963, 34.011646]\n//       },\n//       properties: {\n//         description: \"Joshua Tree National Park\"\n//       }\n//     }\n//   ]\n// };\n\nclass Map extends Component {\n  mapRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: 5,\n      lat: 34,\n      zoom: 1.5\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      scrollZoom: false,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n\n    map.on(\"move\", () => {\n      const { lng, lat } = map.getCenter();\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n\n    // const bounds = new mapboxgl.LngLatBounds();\n\n    // geojson.features.forEach(function(marker) {\n    //   var el = document.createElement(\"div\");\n    //   el.className = \"marker\";\n\n    //   new mapboxgl.Marker({\n    //     element: el,\n    //     anchor: \"bottom\"\n    //   })\n    //     .setLngLat(marker.geometry.coordinates)\n    //     .addTo(map);\n\n    //   new mapboxgl.Popup({\n    //     offset: 30,\n    //     closeOnClick: false\n    //   })\n    //     .setLngLat(marker.geometry.coordinates)\n    //     .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n    //     .addTo(map);\n\n    //   bounds.extend(marker.geometry.coordinates);\n    // });\n\n    // map.fitBounds(bounds, {\n    //   padding: {\n    //     top: 200,\n    //     bottom: 150,\n    //     left: 50,\n    //     right: 50\n    //   }\n    // });\n\n    // map.on(\"load\", function() {\n    //   map.addLayer({\n    //     id: \"route\",\n    //     type: \"line\",\n    //     source: {\n    //       type: \"geojson\",\n    //       data: {\n    //         type: \"Feature\",\n    //         properties: {},\n    //         geometry: {\n    //           type: \"LineString\",\n    //           coordinates: [\n    //             [-112.987418, 37.198125],\n    //             [-111.376161, 36.86438],\n    //             [-112.115763, 36.058973],\n    //             [-116.107963, 34.011646]\n    //           ]\n    //         }\n    //       }\n    //     },\n    //     layout: {\n    //       \"line-join\": \"round\",\n    //       \"line-cap\": \"round\"\n    //     },\n    //     paint: {\n    //       \"line-color\": \"#55c57a\",\n    //       \"line-opacity\": 0.6,\n    //       \"line-width\": 3\n    //     }\n    //   });\n    // });\n  }\n\n  // render() {\n  //   return (\n  //     <div>\n  //       <div\n  //         ref={el => (this.mapContainer = el)}\n  //         className=\"mapContainer\"\n  //         style={{\n  //           position: \"absolute\",\n  //           top: \"0\",\n  //           right: \"0\",\n  //           left: \"0\",\n  //           bottom: \"0\"\n  //         }}\n  //       />\n  //     </div>\n  //   );\n  // }\n\n  render() {\n    const { lng, lat, zoom } = this.state;\n\n    return (\n      <div\n        style={{\n          position: \"relative\",\n          height: \"65rem\"\n        }}\n      >\n        <div\n          className=\"sidebarStyle\"\n          style={{\n            display: \"inline-block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: \"12px\",\n            backgroundColor: \"#404040\",\n            color: \"#ffffff\",\n            zIndex: \"1 !important\",\n            padding: \"6px\",\n            fontWeight: \"bold\"\n          }}\n        >\n          <div>{`Longitude: ${lng} Latitude: ${lat} Zoom: ${zoom}`}</div>\n        </div>\n        <div\n          // ref={el => (this.mapContainer = el)}\n          ref={this.mapRef}\n          className=\"mapContainer\"\n          style={{\n            position: \"absolute\",\n            top: \"0\",\n            right: \"0\",\n            left: \"0\",\n            bottom: \"0\",\n            width: \"100%\"\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n\n// import React, { Component } from \"react\";\n// import mapboxgl from \"mapbox-gl\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import \"mapbox-gl/dist/mapbox-gl.css\";\n\n// import ReactMapGL from 'react-map-gl';\n\n// /*\n// .marker {\n//   background-image: url('../img/pin.png');\n//   background-size: cover;\n//   width: 32px;\n//   height: 40px;\n//   cursor: pointer;\n// }\n\n// .mapboxgl-popup {\n//   max-width: 25rem;\n// }\n\n// .mapboxgl-popup-content {\n//   text-align: center;\n//   font-family: 'Lato', sans-serif;\n//   padding: 1.5rem !important;\n//   font-size: 1.4rem;\n//   -webkit-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n//   box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n// }\n// */\n\n// const useStyles = makeStyles(theme => ({\n//   Map: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     margin: \"5rem 0\",\n//     width: \"100%\",\n//     position: \"relative\",\n//     height: \"65rem\"\n//   },\n//   map: {\n//     position: \"absolute\",\n//     top: \"0\",\n//     right: \"0\",\n//     left: \"0\",\n//     bottom: \"0\",\n//     width: \"100%\"\n//   }\n// }));\n\n// const geojson = {\n//   type: \"FeatureCollection\",\n//   features: [\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.987418, 37.198125]\n//       },\n//       properties: {\n//         description: \"Zion Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-111.376161, 36.86438]\n//       },\n//       properties: {\n//         description: \"Antelope Canyon\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.115763, 36.058973]\n//       },\n//       properties: {\n//         description: \"Grand Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-116.107963, 34.011646]\n//       },\n//       properties: {\n//         description: \"Joshua Tree National Park\"\n//       }\n//     }\n//   ]\n// };\n\n// const Map = () => {\n//   const classes = useStyles();\n//   // const [lng, seLng] = React.useState(5);\n//   // const [lat, setLat] = React.useState(34);\n//   // const [zoom, setZoom] = React.useState(2);\n//   const [map, setMap] = React.useState(null);\n//   const mapContainer = React.useRef(null);\n\n//   React.useEffect(() => {\n//     mapboxgl.accessToken =\n//       \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n//     const initializeMap = ({ setMap, mapContainer }) => {\n//       const map = new mapboxgl.Map({\n//         container: mapContainer.current,\n//         style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n//         center: [0, 0],\n//         zoom: 5\n//       });\n\n//       map.on(\"load\", () => {\n//         setMap(map);\n//         map.resize();\n//       });\n//     };\n\n//     if (!map) initializeMap({ setMap, mapContainer });\n//   }, [map]);\n\n//   // const map = new mapboxgl.Map({\n//   //   container: mapContainer,\n//   //   scrollZoom: false,\n//   //   style: \"mapbox://styles/mapbox/streets-v11\",\n//   //   center: [state.lng, state.lat],\n//   //   zoom: state.zoom\n//   // });\n\n//   // map.on(\"move\", () => {\n//   //   seLng(map.getCenter().lng.toFixed(4));\n//   //   setLat(map.getCenter().lat.toFixed(4));\n//   //   setZoom(map.getZoom().toFixed(2));\n//   // });\n\n//   // const bounds = new mapboxgl.LngLatBounds();\n\n//   // geojson.features.forEach(function(marker) {\n//   //   var el = document.createElement(\"div\");\n//   //   el.className = \"marker\";\n\n//   //   new mapboxgl.Marker({\n//   //     element: el,\n//   //     anchor: \"bottom\"\n//   //   })\n//   //     .setLngLat(marker.geometry.coordinates)\n//   //     .addTo(map);\n\n//   //   new mapboxgl.Popup({\n//   //     offset: 30,\n//   //     closeOnClick: false\n//   //   })\n//   //     .setLngLat(marker.geometry.coordinates)\n//   //     .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n//   //     .addTo(map);\n\n//   //   bounds.extend(marker.geometry.coordinates);\n//   // });\n\n//   // map.fitBounds(bounds, {\n//   //   padding: {\n//   //     top: 200,\n//   //     bottom: 150,\n//   //     left: 50,\n//   //     right: 50\n//   //   }\n//   // });\n\n//   // map.on(\"load\", function() {\n//   //   map.addLayer({\n//   //     id: \"route\",\n//   //     type: \"line\",\n//   //     source: {\n//   //       type: \"geojson\",\n//   //       data: {\n//   //         type: \"Feature\",\n//   //         properties: {},\n//   //         geometry: {\n//   //           type: \"LineString\",\n//   //           coordinates: [\n//   //             [-112.987418, 37.198125],\n//   //             [-111.376161, 36.86438],\n//   //             [-112.115763, 36.058973],\n//   //             [-116.107963, 34.011646]\n//   //           ]\n//   //         }\n//   //       }\n//   //     },\n//   //     layout: {\n//   //       \"line-join\": \"round\",\n//   //       \"line-cap\": \"round\"\n//   //     },\n//   //     paint: {\n//   //       \"line-color\": \"#55c57a\",\n//   //       \"line-opacity\": 0.6,\n//   //       \"line-width\": 3\n//   //     }\n//   //   });\n//   // });\n\n//   return (\n//     <div className={classes.Map}>\n//       {/* <div\n//           className=\"sidebarStyle\"\n//           style={{\n//             display: \"inline-block\",\n//             position: \"absolute\",\n//             top: 0,\n//             left: 0,\n//             margin: \"12px\",\n//             backgroundColor: \"#404040\",\n//             color: \"#ffffff\",\n//             zIndex: \"1 !important\",\n//             padding: \"6px\",\n//             fontWeight: \"bold\"\n//           }}\n//         >\n//           <div>\n//             Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n//             {this.state.zoom}\n//           </div>\n//         </div> */}\n//       <div ref={el => (mapContainer.current = el)} className={classes.map} />\n//     </div>\n//   );\n// };\n\n// export default Map;\n"]},"metadata":{},"sourceType":"module"}