{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/abdulaliyev/web-projects/travel-portal/client/components/home/TourCards.tsx\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_TOURS {\\n    getAllTours {\\n      id\\n      name\\n      duration\\n      createdAt\\n      maxGroupSize\\n      summary\\n      imageCover\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport TourCard from \"./TourCard\";\nvar ALL_TOURS = gql(_templateObject());\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    }\n  };\n});\n\nvar TourCards = function TourCards() {\n  var _useQuery = useQuery(ALL_TOURS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var classes = useStyles();\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Loading ...\");\n  var getAllTours = data.getAllTours;\n  return __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, getAllTours && getAllTours.length && getAllTours.map(function (tour) {\n    return __jsx(TourCard, _extends({\n      key: tour.id\n    }, tour, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default TourCards;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/travel-portal/client/components/home/TourCards.tsx"],"names":["React","Grid","makeStyles","useQuery","gql","TourCard","ALL_TOURS","useStyles","theme","root","flexGrow","TourCards","loading","error","data","classes","getAllTours","length","map","tour","id"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,SAAS,GAAGF,GAAH,mBAAf;AAgBA,IAAMG,SAAS,GAAGL,UAAU,CAAC,UAAAM,KAAK;AAAA,SAAK;AACrCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN;AAD+B,GAAL;AAAA,CAAN,CAA5B;;AAMA,IAAMC,SAA0B,GAAG,SAA7BA,SAA6B,GAAM;AAAA,kBACNR,QAAQ,CAACG,SAAD,CADF;AAAA,MAC/BM,OAD+B,aAC/BA,OAD+B;AAAA,MACtBC,KADsB,aACtBA,KADsB;AAAA,MACfC,IADe,aACfA,IADe;;AAEvC,MAAMC,OAAO,GAAGR,SAAS,EAAzB;AAEA,MAAIK,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAJ0B,MAM/BI,WAN+B,GAMfF,IANe,CAM/BE,WAN+B;AAQvC,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,WAAW,IACVA,WAAW,CAACC,MADb,IAECD,WAAW,CAACE,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACtB,WAAO,MAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC;AAApB,OAA4BD,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFD,CAHJ,CADF;AASD,CAjBD;;AAmBA,eAAeR,SAAf","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport TourCard from \"./TourCard\";\n\nconst ALL_TOURS = gql`\n  query ALL_TOURS {\n    getAllTours {\n      id\n      name\n      duration\n      createdAt\n      maxGroupSize\n      summary\n      imageCover\n    }\n  }\n`;\n\ninterface Props {}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  }\n}));\n\nconst TourCards: React.FC<Props> = () => {\n  const { loading, error, data } = useQuery(ALL_TOURS);\n  const classes = useStyles();\n\n  if (loading) return <p>Loading ...</p>;\n\n  const { getAllTours } = data;\n\n  return (\n    <Grid container spacing={3}>\n      {getAllTours &&\n        getAllTours.length &&\n        getAllTours.map(tour => {\n          return <TourCard key={tour.id} {...tour} />;\n        })}\n    </Grid>\n  );\n};\n\nexport default TourCards;\n"]},"metadata":{},"sourceType":"module"}