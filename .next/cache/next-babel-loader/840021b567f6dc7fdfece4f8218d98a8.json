{"ast":null,"code":"var _jsxFileName = \"/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Map.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n/*\n.marker {\n  background-image: url('../img/pin.png');\n  background-size: cover;\n  width: 32px;\n  height: 40px;\n  cursor: pointer;\n}\n\n.mapboxgl-popup {\n  max-width: 25rem;\n}\n\n.mapboxgl-popup-content {\n  text-align: center;\n  font-family: 'Lato', sans-serif;\n  padding: 1.5rem !important;\n  font-size: 1.4rem;\n  -webkit-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n}\n*/\n\nconst useStyles = makeStyles(theme => ({\n  Map: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"5rem 0\",\n    width: \"100%\",\n    position: \"relative\",\n    height: \"65rem\"\n  },\n  map: {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    left: \"0\",\n    bottom: \"0\",\n    width: \"100%\"\n  }\n}));\nmapboxgl.accessToken = \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\nconst geojson = {\n  type: \"FeatureCollection\",\n  features: [{\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-112.987418, 37.198125]\n    },\n    properties: {\n      description: \"Zion Canyon National Park\"\n    }\n  }, {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-111.376161, 36.86438]\n    },\n    properties: {\n      description: \"Antelope Canyon\"\n    }\n  }, {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-112.115763, 36.058973]\n    },\n    properties: {\n      description: \"Grand Canyon National Park\"\n    }\n  }, {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-116.107963, 34.011646]\n    },\n    properties: {\n      description: \"Joshua Tree National Park\"\n    }\n  }]\n};\n\nconst Map = () => {\n  const classes = useStyles();\n  const [lng, seLng] = React.useState(5);\n  const [lat, setLat] = React.useState(34);\n  const [zoom, setZoom] = React.useState(2);\n  let mapContainer;\n  const map = new mapboxgl.Map({\n    container: mapContainer,\n    scrollZoom: false,\n    style: \"mapbox://styles/mapbox/streets-v11\",\n    center: [state.lng, state.lat],\n    zoom: state.zoom\n  });\n  map.on(\"move\", () => {\n    seLng(map.getCenter().lng.toFixed(4));\n    setLat(map.getCenter().lat.toFixed(4));\n    setZoom(map.getZoom().toFixed(2));\n  });\n  const bounds = new mapboxgl.LngLatBounds();\n  geojson.features.forEach(function (marker) {\n    var el = document.createElement(\"div\");\n    el.className = \"marker\";\n    new mapboxgl.Marker({\n      element: el,\n      anchor: \"bottom\"\n    }).setLngLat(marker.geometry.coordinates).addTo(map);\n    new mapboxgl.Popup({\n      offset: 30,\n      closeOnClick: false\n    }).setLngLat(marker.geometry.coordinates).setHTML(\"<p>\" + marker.properties.description + \"</p>\").addTo(map);\n    bounds.extend(marker.geometry.coordinates);\n  });\n  map.fitBounds(bounds, {\n    padding: {\n      top: 200,\n      bottom: 150,\n      left: 50,\n      right: 50\n    }\n  });\n  map.on(\"load\", function () {\n    map.addLayer({\n      id: \"route\",\n      type: \"line\",\n      source: {\n        type: \"geojson\",\n        data: {\n          type: \"Feature\",\n          properties: {},\n          geometry: {\n            type: \"LineString\",\n            coordinates: [[-112.987418, 37.198125], [-111.376161, 36.86438], [-112.115763, 36.058973], [-116.107963, 34.011646]]\n          }\n        }\n      },\n      layout: {\n        \"line-join\": \"round\",\n        \"line-cap\": \"round\"\n      },\n      paint: {\n        \"line-color\": \"#55c57a\",\n        \"line-opacity\": 0.6,\n        \"line-width\": 3\n      }\n    });\n  });\n  return __jsx(\"div\", {\n    className: classes.Map,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    ref: el => mapContainer = el,\n    className: classes.map,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }));\n};\n\nexport default Map; // import React, { Component } from \"react\";\n// import mapboxgl from \"mapbox-gl\";\n// // pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\n// mapboxgl.accessToken =\n//   \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n// const geojson = {\n//   type: \"FeatureCollection\",\n//   features: [\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.987418, 37.198125]\n//       },\n//       properties: {\n//         description: \"Zion Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-111.376161, 36.86438]\n//       },\n//       properties: {\n//         description: \"Antelope Canyon\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.115763, 36.058973]\n//       },\n//       properties: {\n//         description: \"Grand Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-116.107963, 34.011646]\n//       },\n//       properties: {\n//         description: \"Joshua Tree National Park\"\n//       }\n//     }\n//   ]\n// };\n// class Map extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       lng: 5,\n//       lat: 34,\n//       zoom: 2\n//     };\n//   }\n//   componentDidMount() {\n//     const map = new mapboxgl.Map({\n//       container: this.mapContainer,\n//       scrollZoom: false,\n//       style: \"mapbox://styles/mapbox/streets-v11\",\n//       center: [this.state.lng, this.state.lat],\n//       zoom: this.state.zoom\n//     });\n//     map.on(\"move\", () => {\n//       this.setState({\n//         lng: map.getCenter().lng.toFixed(4),\n//         lat: map.getCenter().lat.toFixed(4),\n//         zoom: map.getZoom().toFixed(2)\n//       });\n//     });\n//     const bounds = new mapboxgl.LngLatBounds();\n//     geojson.features.forEach(function(marker) {\n//       var el = document.createElement(\"div\");\n//       el.className = \"marker\";\n//       new mapboxgl.Marker({\n//         element: el,\n//         anchor: \"bottom\"\n//       })\n//         .setLngLat(marker.geometry.coordinates)\n//         .addTo(map);\n//       new mapboxgl.Popup({\n//         offset: 30,\n//         closeOnClick: false\n//       })\n//         .setLngLat(marker.geometry.coordinates)\n//         .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n//         .addTo(map);\n//       bounds.extend(marker.geometry.coordinates);\n//     });\n//     map.fitBounds(bounds, {\n//       padding: {\n//         top: 200,\n//         bottom: 150,\n//         left: 50,\n//         right: 50\n//       }\n//     });\n//     map.on(\"load\", function() {\n//       map.addLayer({\n//         id: \"route\",\n//         type: \"line\",\n//         source: {\n//           type: \"geojson\",\n//           data: {\n//             type: \"Feature\",\n//             properties: {},\n//             geometry: {\n//               type: \"LineString\",\n//               coordinates: [\n//                 [-112.987418, 37.198125],\n//                 [-111.376161, 36.86438],\n//                 [-112.115763, 36.058973],\n//                 [-116.107963, 34.011646]\n//               ]\n//             }\n//           }\n//         },\n//         layout: {\n//           \"line-join\": \"round\",\n//           \"line-cap\": \"round\"\n//         },\n//         paint: {\n//           \"line-color\": \"#55c57a\",\n//           \"line-opacity\": 0.6,\n//           \"line-width\": 3\n//         }\n//       });\n//     });\n//   }\n//   // render() {\n//   //   return (\n//   //     <div>\n//   //       <div\n//   //         ref={el => (this.mapContainer = el)}\n//   //         className=\"mapContainer\"\n//   //         style={{\n//   //           position: \"absolute\",\n//   //           top: \"0\",\n//   //           right: \"0\",\n//   //           left: \"0\",\n//   //           bottom: \"0\"\n//   //         }}\n//   //       />\n//   //     </div>\n//   //   );\n//   // }\n//   render() {\n//     return (\n//       <div\n//         style={{\n//           position: \"relative\",\n//           height: \"65rem\"\n//         }}\n//       >\n//         <div\n//           className=\"sidebarStyle\"\n//           style={{\n//             display: \"inline-block\",\n//             position: \"absolute\",\n//             top: 0,\n//             left: 0,\n//             margin: \"12px\",\n//             backgroundColor: \"#404040\",\n//             color: \"#ffffff\",\n//             zIndex: \"1 !important\",\n//             padding: \"6px\",\n//             fontWeight: \"bold\"\n//           }}\n//         >\n//           <div>\n//             Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n//             {this.state.zoom}\n//           </div>\n//         </div>\n//         <div\n//           ref={el => (this.mapContainer = el)}\n//           className=\"mapContainer\"\n//           style={{\n//             position: \"absolute\",\n//             top: \"0\",\n//             right: \"0\",\n//             left: \"0\",\n//             bottom: \"0\",\n//             width: \"100%\"\n//           }}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// export default Map;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Map.js"],"names":["React","Component","mapboxgl","makeStyles","useStyles","theme","Map","display","justifyContent","alignItems","margin","width","position","height","map","top","right","left","bottom","accessToken","geojson","type","features","geometry","coordinates","properties","description","classes","lng","seLng","useState","lat","setLat","zoom","setZoom","mapContainer","container","scrollZoom","style","center","state","on","getCenter","toFixed","getZoom","bounds","LngLatBounds","forEach","marker","el","document","createElement","className","Marker","element","anchor","setLngLat","addTo","Popup","offset","closeOnClick","setHTML","extend","fitBounds","padding","addLayer","id","source","data","layout","paint"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,cAAc,EAAE,QAFb;AAGHC,IAAAA,UAAU,EAAE,QAHT;AAIHC,IAAAA,MAAM,EAAE,QAJL;AAKHC,IAAAA,KAAK,EAAE,MALJ;AAMHC,IAAAA,QAAQ,EAAE,UANP;AAOHC,IAAAA,MAAM,EAAE;AAPL,GADgC;AAUrCC,EAAAA,GAAG,EAAE;AACHF,IAAAA,QAAQ,EAAE,UADP;AAEHG,IAAAA,GAAG,EAAE,GAFF;AAGHC,IAAAA,KAAK,EAAE,GAHJ;AAIHC,IAAAA,IAAI,EAAE,GAJH;AAKHC,IAAAA,MAAM,EAAE,GALL;AAMHP,IAAAA,KAAK,EAAE;AANJ;AAVgC,CAAL,CAAN,CAA5B;AAoBAT,QAAQ,CAACiB,WAAT,GACE,0FADF;AAGA,MAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE,mBADQ;AAEdC,EAAAA,QAAQ,EAAE,CACR;AACED,IAAAA,IAAI,EAAE,SADR;AAEEE,IAAAA,QAAQ,EAAE;AACRF,MAAAA,IAAI,EAAE,OADE;AAERG,MAAAA,WAAW,EAAE,CAAC,CAAC,UAAF,EAAc,SAAd;AAFL,KAFZ;AAMEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE;AADH;AANd,GADQ,EAWR;AACEL,IAAAA,IAAI,EAAE,SADR;AAEEE,IAAAA,QAAQ,EAAE;AACRF,MAAAA,IAAI,EAAE,OADE;AAERG,MAAAA,WAAW,EAAE,CAAC,CAAC,UAAF,EAAc,QAAd;AAFL,KAFZ;AAMEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE;AADH;AANd,GAXQ,EAqBR;AACEL,IAAAA,IAAI,EAAE,SADR;AAEEE,IAAAA,QAAQ,EAAE;AACRF,MAAAA,IAAI,EAAE,OADE;AAERG,MAAAA,WAAW,EAAE,CAAC,CAAC,UAAF,EAAc,SAAd;AAFL,KAFZ;AAMEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE;AADH;AANd,GArBQ,EA+BR;AACEL,IAAAA,IAAI,EAAE,SADR;AAEEE,IAAAA,QAAQ,EAAE;AACRF,MAAAA,IAAI,EAAE,OADE;AAERG,MAAAA,WAAW,EAAE,CAAC,CAAC,UAAF,EAAc,SAAd;AAFL,KAFZ;AAMEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE;AADH;AANd,GA/BQ;AAFI,CAAhB;;AA8CA,MAAMpB,GAAG,GAAG,MAAM;AAChB,QAAMqB,OAAO,GAAGvB,SAAS,EAAzB;AACA,QAAM,CAACwB,GAAD,EAAMC,KAAN,IAAe7B,KAAK,CAAC8B,QAAN,CAAe,CAAf,CAArB;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBhC,KAAK,CAAC8B,QAAN,CAAe,EAAf,CAAtB;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBlC,KAAK,CAAC8B,QAAN,CAAe,CAAf,CAAxB;AACA,MAAIK,YAAJ;AAEA,QAAMrB,GAAG,GAAG,IAAIZ,QAAQ,CAACI,GAAb,CAAiB;AAC3B8B,IAAAA,SAAS,EAAED,YADgB;AAE3BE,IAAAA,UAAU,EAAE,KAFe;AAG3BC,IAAAA,KAAK,EAAE,oCAHoB;AAI3BC,IAAAA,MAAM,EAAE,CAACC,KAAK,CAACZ,GAAP,EAAYY,KAAK,CAACT,GAAlB,CAJmB;AAK3BE,IAAAA,IAAI,EAAEO,KAAK,CAACP;AALe,GAAjB,CAAZ;AAQAnB,EAAAA,GAAG,CAAC2B,EAAJ,CAAO,MAAP,EAAe,MAAM;AACnBZ,IAAAA,KAAK,CAACf,GAAG,CAAC4B,SAAJ,GAAgBd,GAAhB,CAAoBe,OAApB,CAA4B,CAA5B,CAAD,CAAL;AACAX,IAAAA,MAAM,CAAClB,GAAG,CAAC4B,SAAJ,GAAgBX,GAAhB,CAAoBY,OAApB,CAA4B,CAA5B,CAAD,CAAN;AACAT,IAAAA,OAAO,CAACpB,GAAG,CAAC8B,OAAJ,GAAcD,OAAd,CAAsB,CAAtB,CAAD,CAAP;AACD,GAJD;AAMA,QAAME,MAAM,GAAG,IAAI3C,QAAQ,CAAC4C,YAAb,EAAf;AAEA1B,EAAAA,OAAO,CAACE,QAAR,CAAiByB,OAAjB,CAAyB,UAASC,MAAT,EAAiB;AACxC,QAAIC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAT;AACAF,IAAAA,EAAE,CAACG,SAAH,GAAe,QAAf;AAEA,QAAIlD,QAAQ,CAACmD,MAAb,CAAoB;AAClBC,MAAAA,OAAO,EAAEL,EADS;AAElBM,MAAAA,MAAM,EAAE;AAFU,KAApB,EAIGC,SAJH,CAIaR,MAAM,CAACzB,QAAP,CAAgBC,WAJ7B,EAKGiC,KALH,CAKS3C,GALT;AAOA,QAAIZ,QAAQ,CAACwD,KAAb,CAAmB;AACjBC,MAAAA,MAAM,EAAE,EADS;AAEjBC,MAAAA,YAAY,EAAE;AAFG,KAAnB,EAIGJ,SAJH,CAIaR,MAAM,CAACzB,QAAP,CAAgBC,WAJ7B,EAKGqC,OALH,CAKW,QAAQb,MAAM,CAACvB,UAAP,CAAkBC,WAA1B,GAAwC,MALnD,EAMG+B,KANH,CAMS3C,GANT;AAQA+B,IAAAA,MAAM,CAACiB,MAAP,CAAcd,MAAM,CAACzB,QAAP,CAAgBC,WAA9B;AACD,GApBD;AAsBAV,EAAAA,GAAG,CAACiD,SAAJ,CAAclB,MAAd,EAAsB;AACpBmB,IAAAA,OAAO,EAAE;AACPjD,MAAAA,GAAG,EAAE,GADE;AAEPG,MAAAA,MAAM,EAAE,GAFD;AAGPD,MAAAA,IAAI,EAAE,EAHC;AAIPD,MAAAA,KAAK,EAAE;AAJA;AADW,GAAtB;AASAF,EAAAA,GAAG,CAAC2B,EAAJ,CAAO,MAAP,EAAe,YAAW;AACxB3B,IAAAA,GAAG,CAACmD,QAAJ,CAAa;AACXC,MAAAA,EAAE,EAAE,OADO;AAEX7C,MAAAA,IAAI,EAAE,MAFK;AAGX8C,MAAAA,MAAM,EAAE;AACN9C,QAAAA,IAAI,EAAE,SADA;AAEN+C,QAAAA,IAAI,EAAE;AACJ/C,UAAAA,IAAI,EAAE,SADF;AAEJI,UAAAA,UAAU,EAAE,EAFR;AAGJF,UAAAA,QAAQ,EAAE;AACRF,YAAAA,IAAI,EAAE,YADE;AAERG,YAAAA,WAAW,EAAE,CACX,CAAC,CAAC,UAAF,EAAc,SAAd,CADW,EAEX,CAAC,CAAC,UAAF,EAAc,QAAd,CAFW,EAGX,CAAC,CAAC,UAAF,EAAc,SAAd,CAHW,EAIX,CAAC,CAAC,UAAF,EAAc,SAAd,CAJW;AAFL;AAHN;AAFA,OAHG;AAmBX6C,MAAAA,MAAM,EAAE;AACN,qBAAa,OADP;AAEN,oBAAY;AAFN,OAnBG;AAuBXC,MAAAA,KAAK,EAAE;AACL,sBAAc,SADT;AAEL,wBAAgB,GAFX;AAGL,sBAAc;AAHT;AAvBI,KAAb;AA6BD,GA9BD;AAgCA,SACE;AAAK,IAAA,SAAS,EAAE3C,OAAO,CAACrB,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBE;AAAK,IAAA,GAAG,EAAE2C,EAAE,IAAKd,YAAY,GAAGc,EAAhC;AAAqC,IAAA,SAAS,EAAEtB,OAAO,CAACb,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADF;AAyBD,CA/GD;;AAiHA,eAAeR,GAAfsourcesContent":["import React, { Component } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n/*\n.marker {\n  background-image: url('../img/pin.png');\n  background-size: cover;\n  width: 32px;\n  height: 40px;\n  cursor: pointer;\n}\n\n.mapboxgl-popup {\n  max-width: 25rem;\n}\n\n.mapboxgl-popup-content {\n  text-align: center;\n  font-family: 'Lato', sans-serif;\n  padding: 1.5rem !important;\n  font-size: 1.4rem;\n  -webkit-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n}\n*/\n\nconst useStyles = makeStyles(theme => ({\n  Map: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"5rem 0\",\n    width: \"100%\",\n    position: \"relative\",\n    height: \"65rem\"\n  },\n  map: {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    left: \"0\",\n    bottom: \"0\",\n    width: \"100%\"\n  }\n}));\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n\nconst geojson = {\n  type: \"FeatureCollection\",\n  features: [\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-112.987418, 37.198125]\n      },\n      properties: {\n        description: \"Zion Canyon National Park\"\n      }\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-111.376161, 36.86438]\n      },\n      properties: {\n        description: \"Antelope Canyon\"\n      }\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-112.115763, 36.058973]\n      },\n      properties: {\n        description: \"Grand Canyon National Park\"\n      }\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-116.107963, 34.011646]\n      },\n      properties: {\n        description: \"Joshua Tree National Park\"\n      }\n    }\n  ]\n};\n\nconst Map = () => {\n  const classes = useStyles();\n  const [lng, seLng] = React.useState(5);\n  const [lat, setLat] = React.useState(34);\n  const [zoom, setZoom] = React.useState(2);\n  let mapContainer;\n\n  const map = new mapboxgl.Map({\n    container: mapContainer,\n    scrollZoom: false,\n    style: \"mapbox://styles/mapbox/streets-v11\",\n    center: [state.lng, state.lat],\n    zoom: state.zoom\n  });\n\n  map.on(\"move\", () => {\n    seLng(map.getCenter().lng.toFixed(4));\n    setLat(map.getCenter().lat.toFixed(4));\n    setZoom(map.getZoom().toFixed(2));\n  });\n\n  const bounds = new mapboxgl.LngLatBounds();\n\n  geojson.features.forEach(function(marker) {\n    var el = document.createElement(\"div\");\n    el.className = \"marker\";\n\n    new mapboxgl.Marker({\n      element: el,\n      anchor: \"bottom\"\n    })\n      .setLngLat(marker.geometry.coordinates)\n      .addTo(map);\n\n    new mapboxgl.Popup({\n      offset: 30,\n      closeOnClick: false\n    })\n      .setLngLat(marker.geometry.coordinates)\n      .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n      .addTo(map);\n\n    bounds.extend(marker.geometry.coordinates);\n  });\n\n  map.fitBounds(bounds, {\n    padding: {\n      top: 200,\n      bottom: 150,\n      left: 50,\n      right: 50\n    }\n  });\n\n  map.on(\"load\", function() {\n    map.addLayer({\n      id: \"route\",\n      type: \"line\",\n      source: {\n        type: \"geojson\",\n        data: {\n          type: \"Feature\",\n          properties: {},\n          geometry: {\n            type: \"LineString\",\n            coordinates: [\n              [-112.987418, 37.198125],\n              [-111.376161, 36.86438],\n              [-112.115763, 36.058973],\n              [-116.107963, 34.011646]\n            ]\n          }\n        }\n      },\n      layout: {\n        \"line-join\": \"round\",\n        \"line-cap\": \"round\"\n      },\n      paint: {\n        \"line-color\": \"#55c57a\",\n        \"line-opacity\": 0.6,\n        \"line-width\": 3\n      }\n    });\n  });\n\n  return (\n    <div className={classes.Map}>\n      {/* <div\n          className=\"sidebarStyle\"\n          style={{\n            display: \"inline-block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: \"12px\",\n            backgroundColor: \"#404040\",\n            color: \"#ffffff\",\n            zIndex: \"1 !important\",\n            padding: \"6px\",\n            fontWeight: \"bold\"\n          }}\n        >\n          <div>\n            Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n            {this.state.zoom}\n          </div>\n        </div> */}\n      <div ref={el => (mapContainer = el)} className={classes.map} />\n    </div>\n  );\n};\n\nexport default Map;\n\n// import React, { Component } from \"react\";\n// import mapboxgl from \"mapbox-gl\";\n// // pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\n\n// mapboxgl.accessToken =\n//   \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n\n// const geojson = {\n//   type: \"FeatureCollection\",\n//   features: [\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.987418, 37.198125]\n//       },\n//       properties: {\n//         description: \"Zion Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-111.376161, 36.86438]\n//       },\n//       properties: {\n//         description: \"Antelope Canyon\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.115763, 36.058973]\n//       },\n//       properties: {\n//         description: \"Grand Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-116.107963, 34.011646]\n//       },\n//       properties: {\n//         description: \"Joshua Tree National Park\"\n//       }\n//     }\n//   ]\n// };\n\n// class Map extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       lng: 5,\n//       lat: 34,\n//       zoom: 2\n//     };\n//   }\n\n//   componentDidMount() {\n//     const map = new mapboxgl.Map({\n//       container: this.mapContainer,\n//       scrollZoom: false,\n//       style: \"mapbox://styles/mapbox/streets-v11\",\n//       center: [this.state.lng, this.state.lat],\n//       zoom: this.state.zoom\n//     });\n\n//     map.on(\"move\", () => {\n//       this.setState({\n//         lng: map.getCenter().lng.toFixed(4),\n//         lat: map.getCenter().lat.toFixed(4),\n//         zoom: map.getZoom().toFixed(2)\n//       });\n//     });\n\n//     const bounds = new mapboxgl.LngLatBounds();\n\n//     geojson.features.forEach(function(marker) {\n//       var el = document.createElement(\"div\");\n//       el.className = \"marker\";\n\n//       new mapboxgl.Marker({\n//         element: el,\n//         anchor: \"bottom\"\n//       })\n//         .setLngLat(marker.geometry.coordinates)\n//         .addTo(map);\n\n//       new mapboxgl.Popup({\n//         offset: 30,\n//         closeOnClick: false\n//       })\n//         .setLngLat(marker.geometry.coordinates)\n//         .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n//         .addTo(map);\n\n//       bounds.extend(marker.geometry.coordinates);\n//     });\n\n//     map.fitBounds(bounds, {\n//       padding: {\n//         top: 200,\n//         bottom: 150,\n//         left: 50,\n//         right: 50\n//       }\n//     });\n\n//     map.on(\"load\", function() {\n//       map.addLayer({\n//         id: \"route\",\n//         type: \"line\",\n//         source: {\n//           type: \"geojson\",\n//           data: {\n//             type: \"Feature\",\n//             properties: {},\n//             geometry: {\n//               type: \"LineString\",\n//               coordinates: [\n//                 [-112.987418, 37.198125],\n//                 [-111.376161, 36.86438],\n//                 [-112.115763, 36.058973],\n//                 [-116.107963, 34.011646]\n//               ]\n//             }\n//           }\n//         },\n//         layout: {\n//           \"line-join\": \"round\",\n//           \"line-cap\": \"round\"\n//         },\n//         paint: {\n//           \"line-color\": \"#55c57a\",\n//           \"line-opacity\": 0.6,\n//           \"line-width\": 3\n//         }\n//       });\n//     });\n//   }\n\n//   // render() {\n//   //   return (\n//   //     <div>\n//   //       <div\n//   //         ref={el => (this.mapContainer = el)}\n//   //         className=\"mapContainer\"\n//   //         style={{\n//   //           position: \"absolute\",\n//   //           top: \"0\",\n//   //           right: \"0\",\n//   //           left: \"0\",\n//   //           bottom: \"0\"\n//   //         }}\n//   //       />\n//   //     </div>\n//   //   );\n//   // }\n\n//   render() {\n//     return (\n//       <div\n//         style={{\n//           position: \"relative\",\n//           height: \"65rem\"\n//         }}\n//       >\n//         <div\n//           className=\"sidebarStyle\"\n//           style={{\n//             display: \"inline-block\",\n//             position: \"absolute\",\n//             top: 0,\n//             left: 0,\n//             margin: \"12px\",\n//             backgroundColor: \"#404040\",\n//             color: \"#ffffff\",\n//             zIndex: \"1 !important\",\n//             padding: \"6px\",\n//             fontWeight: \"bold\"\n//           }}\n//         >\n//           <div>\n//             Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n//             {this.state.zoom}\n//           </div>\n//         </div>\n//         <div\n//           ref={el => (this.mapContainer = el)}\n//           className=\"mapContainer\"\n//           style={{\n//             position: \"absolute\",\n//             top: \"0\",\n//             right: \"0\",\n//             left: \"0\",\n//             bottom: \"0\",\n//             width: \"100%\"\n//           }}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// export default Map;\n"]},"metadata":{},"sourceType":"module"}