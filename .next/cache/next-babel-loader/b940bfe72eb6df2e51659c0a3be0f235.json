{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Map.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from \"react\";\nimport ReactMapGL from \"react-map-gl\";\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Map)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      viewport: {\n        width: \"100vw\",\n        height: \"100vh\",\n        latitude: 41.5868,\n        longitude: -93.625,\n        zoom: 13\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //     const map = new mapboxgl.Map({\n      //       container: this.mapContainer,\n      //       scrollZoom: false,\n      //       style: \"mapbox://styles/mapbox/streets-v11\",\n      //       center: [this.state.lng, this.state.lat],\n      //       zoom: this.state.zoom\n      //     });\n      return __jsx(ReactMapGL, _extends({\n        mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n        scrollZoom: false,\n        mapboxApiAccessToken: \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\",\n        onViewportChange: function onViewportChange(viewport) {\n          return _this2.setState({\n            viewport: viewport\n          });\n        }\n      }, this.state.viewport, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map; // import React, { Component } from \"react\";\n// import mapboxgl from \"mapbox-gl\"; ReferenceError: self is not defined\n// // pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\n// mapboxgl.accessToken =\n//   \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n// // const geojson = {\n// //   type: \"FeatureCollection\",\n// //   features: [\n// //     {\n// //       type: \"Feature\",\n// //       geometry: {\n// //         type: \"Point\",\n// //         coordinates: [-112.987418, 37.198125]\n// //       },\n// //       properties: {\n// //         description: \"Zion Canyon National Park\"\n// //       }\n// //     },\n// //     {\n// //       type: \"Feature\",\n// //       geometry: {\n// //         type: \"Point\",\n// //         coordinates: [-111.376161, 36.86438]\n// //       },\n// //       properties: {\n// //         description: \"Antelope Canyon\"\n// //       }\n// //     },\n// //     {\n// //       type: \"Feature\",\n// //       geometry: {\n// //         type: \"Point\",\n// //         coordinates: [-112.115763, 36.058973]\n// //       },\n// //       properties: {\n// //         description: \"Grand Canyon National Park\"\n// //       }\n// //     },\n// //     {\n// //       type: \"Feature\",\n// //       geometry: {\n// //         type: \"Point\",\n// //         coordinates: [-116.107963, 34.011646]\n// //       },\n// //       properties: {\n// //         description: \"Joshua Tree National Park\"\n// //       }\n// //     }\n// //   ]\n// // };\n// class Map extends Component {\n//   mapRef = React.createRef();\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       lng: 5,\n//       lat: 34,\n//       zoom: 1.5\n//     };\n//   }\n//   componentDidMount() {\n//     const map = new mapboxgl.Map({\n//       container: this.mapContainer,\n//       scrollZoom: false,\n//       style: \"mapbox://styles/mapbox/streets-v11\",\n//       center: [this.state.lng, this.state.lat],\n//       zoom: this.state.zoom\n//     });\n//     map.on(\"move\", () => {\n//       const { lng, lat } = map.getCenter();\n//       this.setState({\n//         lng: lng.toFixed(4),\n//         lat: lat.toFixed(4),\n//         zoom: map.getZoom().toFixed(2)\n//       });\n//     });\n//     // const bounds = new mapboxgl.LngLatBounds();\n//     // geojson.features.forEach(function(marker) {\n//     //   var el = document.createElement(\"div\");\n//     //   el.className = \"marker\";\n//     //   new mapboxgl.Marker({\n//     //     element: el,\n//     //     anchor: \"bottom\"\n//     //   })\n//     //     .setLngLat(marker.geometry.coordinates)\n//     //     .addTo(map);\n//     //   new mapboxgl.Popup({\n//     //     offset: 30,\n//     //     closeOnClick: false\n//     //   })\n//     //     .setLngLat(marker.geometry.coordinates)\n//     //     .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n//     //     .addTo(map);\n//     //   bounds.extend(marker.geometry.coordinates);\n//     // });\n//     // map.fitBounds(bounds, {\n//     //   padding: {\n//     //     top: 200,\n//     //     bottom: 150,\n//     //     left: 50,\n//     //     right: 50\n//     //   }\n//     // });\n//     // map.on(\"load\", function() {\n//     //   map.addLayer({\n//     //     id: \"route\",\n//     //     type: \"line\",\n//     //     source: {\n//     //       type: \"geojson\",\n//     //       data: {\n//     //         type: \"Feature\",\n//     //         properties: {},\n//     //         geometry: {\n//     //           type: \"LineString\",\n//     //           coordinates: [\n//     //             [-112.987418, 37.198125],\n//     //             [-111.376161, 36.86438],\n//     //             [-112.115763, 36.058973],\n//     //             [-116.107963, 34.011646]\n//     //           ]\n//     //         }\n//     //       }\n//     //     },\n//     //     layout: {\n//     //       \"line-join\": \"round\",\n//     //       \"line-cap\": \"round\"\n//     //     },\n//     //     paint: {\n//     //       \"line-color\": \"#55c57a\",\n//     //       \"line-opacity\": 0.6,\n//     //       \"line-width\": 3\n//     //     }\n//     //   });\n//     // });\n//   }\n//   // render() {\n//   //   return (\n//   //     <div>\n//   //       <div\n//   //         ref={el => (this.mapContainer = el)}\n//   //         className=\"mapContainer\"\n//   //         style={{\n//   //           position: \"absolute\",\n//   //           top: \"0\",\n//   //           right: \"0\",\n//   //           left: \"0\",\n//   //           bottom: \"0\"\n//   //         }}\n//   //       />\n//   //     </div>\n//   //   );\n//   // }\n//   render() {\n//     const { lng, lat, zoom } = this.state;\n//     return (\n//       <div\n//         style={{\n//           position: \"relative\",\n//           height: \"65rem\"\n//         }}\n//       >\n//         <div\n//           className=\"sidebarStyle\"\n//           style={{\n//             display: \"inline-block\",\n//             position: \"absolute\",\n//             top: 0,\n//             left: 0,\n//             margin: \"12px\",\n//             backgroundColor: \"#404040\",\n//             color: \"#ffffff\",\n//             zIndex: \"1 !important\",\n//             padding: \"6px\",\n//             fontWeight: \"bold\"\n//           }}\n//         >\n//           <div>{`Longitude: ${lng} Latitude: ${lat} Zoom: ${zoom}`}</div>\n//         </div>\n//         <div\n//           // ref={el => (this.mapContainer = el)}\n//           ref={this.mapRef}\n//           className=\"mapContainer\"\n//           style={{\n//             position: \"absolute\",\n//             top: \"0\",\n//             right: \"0\",\n//             left: \"0\",\n//             bottom: \"0\",\n//             width: \"100%\"\n//           }}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// export default Map;\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// import React, { Component } from \"react\";\n// import mapboxgl from \"mapbox-gl\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import \"mapbox-gl/dist/mapbox-gl.css\";\n// import ReactMapGL from 'react-map-gl';\n// /*\n// .marker {\n//   background-image: url('../img/pin.png');\n//   background-size: cover;\n//   width: 32px;\n//   height: 40px;\n//   cursor: pointer;\n// }\n// .mapboxgl-popup {\n//   max-width: 25rem;\n// }\n// .mapboxgl-popup-content {\n//   text-align: center;\n//   font-family: 'Lato', sans-serif;\n//   padding: 1.5rem !important;\n//   font-size: 1.4rem;\n//   -webkit-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n//   box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n// }\n// */\n// const useStyles = makeStyles(theme => ({\n//   Map: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     margin: \"5rem 0\",\n//     width: \"100%\",\n//     position: \"relative\",\n//     height: \"65rem\"\n//   },\n//   map: {\n//     position: \"absolute\",\n//     top: \"0\",\n//     right: \"0\",\n//     left: \"0\",\n//     bottom: \"0\",\n//     width: \"100%\"\n//   }\n// }));\n// const geojson = {\n//   type: \"FeatureCollection\",\n//   features: [\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.987418, 37.198125]\n//       },\n//       properties: {\n//         description: \"Zion Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-111.376161, 36.86438]\n//       },\n//       properties: {\n//         description: \"Antelope Canyon\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.115763, 36.058973]\n//       },\n//       properties: {\n//         description: \"Grand Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-116.107963, 34.011646]\n//       },\n//       properties: {\n//         description: \"Joshua Tree National Park\"\n//       }\n//     }\n//   ]\n// };\n// const Map = () => {\n//   const classes = useStyles();\n//   // const [lng, seLng] = React.useState(5);\n//   // const [lat, setLat] = React.useState(34);\n//   // const [zoom, setZoom] = React.useState(2);\n//   const [map, setMap] = React.useState(null);\n//   const mapContainer = React.useRef(null);\n//   React.useEffect(() => {\n//     mapboxgl.accessToken =\n//       \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n//     const initializeMap = ({ setMap, mapContainer }) => {\n//       const map = new mapboxgl.Map({\n//         container: mapContainer.current,\n//         style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n//         center: [0, 0],\n//         zoom: 5\n//       });\n//       map.on(\"load\", () => {\n//         setMap(map);\n//         map.resize();\n//       });\n//     };\n//     if (!map) initializeMap({ setMap, mapContainer });\n//   }, [map]);\n//   // const map = new mapboxgl.Map({\n//   //   container: mapContainer,\n//   //   scrollZoom: false,\n//   //   style: \"mapbox://styles/mapbox/streets-v11\",\n//   //   center: [state.lng, state.lat],\n//   //   zoom: state.zoom\n//   // });\n//   // map.on(\"move\", () => {\n//   //   seLng(map.getCenter().lng.toFixed(4));\n//   //   setLat(map.getCenter().lat.toFixed(4));\n//   //   setZoom(map.getZoom().toFixed(2));\n//   // });\n//   // const bounds = new mapboxgl.LngLatBounds();\n//   // geojson.features.forEach(function(marker) {\n//   //   var el = document.createElement(\"div\");\n//   //   el.className = \"marker\";\n//   //   new mapboxgl.Marker({\n//   //     element: el,\n//   //     anchor: \"bottom\"\n//   //   })\n//   //     .setLngLat(marker.geometry.coordinates)\n//   //     .addTo(map);\n//   //   new mapboxgl.Popup({\n//   //     offset: 30,\n//   //     closeOnClick: false\n//   //   })\n//   //     .setLngLat(marker.geometry.coordinates)\n//   //     .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n//   //     .addTo(map);\n//   //   bounds.extend(marker.geometry.coordinates);\n//   // });\n//   // map.fitBounds(bounds, {\n//   //   padding: {\n//   //     top: 200,\n//   //     bottom: 150,\n//   //     left: 50,\n//   //     right: 50\n//   //   }\n//   // });\n//   // map.on(\"load\", function() {\n//   //   map.addLayer({\n//   //     id: \"route\",\n//   //     type: \"line\",\n//   //     source: {\n//   //       type: \"geojson\",\n//   //       data: {\n//   //         type: \"Feature\",\n//   //         properties: {},\n//   //         geometry: {\n//   //           type: \"LineString\",\n//   //           coordinates: [\n//   //             [-112.987418, 37.198125],\n//   //             [-111.376161, 36.86438],\n//   //             [-112.115763, 36.058973],\n//   //             [-116.107963, 34.011646]\n//   //           ]\n//   //         }\n//   //       }\n//   //     },\n//   //     layout: {\n//   //       \"line-join\": \"round\",\n//   //       \"line-cap\": \"round\"\n//   //     },\n//   //     paint: {\n//   //       \"line-color\": \"#55c57a\",\n//   //       \"line-opacity\": 0.6,\n//   //       \"line-width\": 3\n//   //     }\n//   //   });\n//   // });\n//   return (\n//     <div className={classes.Map}>\n//       {/* <div\n//           className=\"sidebarStyle\"\n//           style={{\n//             display: \"inline-block\",\n//             position: \"absolute\",\n//             top: 0,\n//             left: 0,\n//             margin: \"12px\",\n//             backgroundColor: \"#404040\",\n//             color: \"#ffffff\",\n//             zIndex: \"1 !important\",\n//             padding: \"6px\",\n//             fontWeight: \"bold\"\n//           }}\n//         >\n//           <div>\n//             Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n//             {this.state.zoom}\n//           </div>\n//         </div> */}\n//       <div ref={el => (mapContainer.current = el)} className={classes.map} />\n//     </div>\n//   );\n// };\n// export default Map;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Map.tsx"],"names":["Component","ReactMapGL","Map","viewport","width","height","latitude","longitude","zoom","setState","state"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,G;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE,OADC;AAERC,QAAAA,MAAM,EAAE,OAFA;AAGRC,QAAAA,QAAQ,EAAE,OAHF;AAIRC,QAAAA,SAAS,EAAE,CAAC,MAJJ;AAKRC,QAAAA,IAAI,EAAE;AALE;AADJ,K;;;;;;;6BAUC;AAAA;;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aACE,MAAC,UAAD;AACE,QAAA,QAAQ,EAAC,mCADX;AAEE,QAAA,UAAU,EAAE,KAFd;AAGE,QAAA,oBAAoB,EAAC,0FAHvB;AAIE,QAAA,gBAAgB,EAAE,0BAAAL,QAAQ;AAAA,iBAAI,MAAI,CAACM,QAAL,CAAc;AAAEN,YAAAA,QAAQ,EAARA;AAAF,WAAd,CAAJ;AAAA;AAJ5B,SAKM,KAAKO,KAAL,CAAWP,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AASD;;;;EA5BeH,S;;AA+BlB,eAAeE,GAAfsourcesContent":["import { Component } from \"react\";\nimport ReactMapGL from \"react-map-gl\";\n\nclass Map extends Component {\n  state = {\n    viewport: {\n      width: \"100vw\",\n      height: \"100vh\",\n      latitude: 41.5868,\n      longitude: -93.625,\n      zoom: 13\n    }\n  };\n\n  render() {\n    //     const map = new mapboxgl.Map({\n    //       container: this.mapContainer,\n    //       scrollZoom: false,\n    //       style: \"mapbox://styles/mapbox/streets-v11\",\n    //       center: [this.state.lng, this.state.lat],\n    //       zoom: this.state.zoom\n    //     });\n    return (\n      <ReactMapGL\n        mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n        scrollZoom={false}\n        mapboxApiAccessToken=\"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\"\n        onViewportChange={viewport => this.setState({ viewport })}\n        {...this.state.viewport}\n      />\n    );\n  }\n}\n\nexport default Map;\n\n// import React, { Component } from \"react\";\n// import mapboxgl from \"mapbox-gl\"; ReferenceError: self is not defined\n// // pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\n\n// mapboxgl.accessToken =\n//   \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n\n// // const geojson = {\n// //   type: \"FeatureCollection\",\n// //   features: [\n// //     {\n// //       type: \"Feature\",\n// //       geometry: {\n// //         type: \"Point\",\n// //         coordinates: [-112.987418, 37.198125]\n// //       },\n// //       properties: {\n// //         description: \"Zion Canyon National Park\"\n// //       }\n// //     },\n// //     {\n// //       type: \"Feature\",\n// //       geometry: {\n// //         type: \"Point\",\n// //         coordinates: [-111.376161, 36.86438]\n// //       },\n// //       properties: {\n// //         description: \"Antelope Canyon\"\n// //       }\n// //     },\n// //     {\n// //       type: \"Feature\",\n// //       geometry: {\n// //         type: \"Point\",\n// //         coordinates: [-112.115763, 36.058973]\n// //       },\n// //       properties: {\n// //         description: \"Grand Canyon National Park\"\n// //       }\n// //     },\n// //     {\n// //       type: \"Feature\",\n// //       geometry: {\n// //         type: \"Point\",\n// //         coordinates: [-116.107963, 34.011646]\n// //       },\n// //       properties: {\n// //         description: \"Joshua Tree National Park\"\n// //       }\n// //     }\n// //   ]\n// // };\n\n// class Map extends Component {\n//   mapRef = React.createRef();\n\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       lng: 5,\n//       lat: 34,\n//       zoom: 1.5\n//     };\n//   }\n\n//   componentDidMount() {\n//     const map = new mapboxgl.Map({\n//       container: this.mapContainer,\n//       scrollZoom: false,\n//       style: \"mapbox://styles/mapbox/streets-v11\",\n//       center: [this.state.lng, this.state.lat],\n//       zoom: this.state.zoom\n//     });\n\n//     map.on(\"move\", () => {\n//       const { lng, lat } = map.getCenter();\n\n//       this.setState({\n//         lng: lng.toFixed(4),\n//         lat: lat.toFixed(4),\n//         zoom: map.getZoom().toFixed(2)\n//       });\n//     });\n\n//     // const bounds = new mapboxgl.LngLatBounds();\n\n//     // geojson.features.forEach(function(marker) {\n//     //   var el = document.createElement(\"div\");\n//     //   el.className = \"marker\";\n\n//     //   new mapboxgl.Marker({\n//     //     element: el,\n//     //     anchor: \"bottom\"\n//     //   })\n//     //     .setLngLat(marker.geometry.coordinates)\n//     //     .addTo(map);\n\n//     //   new mapboxgl.Popup({\n//     //     offset: 30,\n//     //     closeOnClick: false\n//     //   })\n//     //     .setLngLat(marker.geometry.coordinates)\n//     //     .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n//     //     .addTo(map);\n\n//     //   bounds.extend(marker.geometry.coordinates);\n//     // });\n\n//     // map.fitBounds(bounds, {\n//     //   padding: {\n//     //     top: 200,\n//     //     bottom: 150,\n//     //     left: 50,\n//     //     right: 50\n//     //   }\n//     // });\n\n//     // map.on(\"load\", function() {\n//     //   map.addLayer({\n//     //     id: \"route\",\n//     //     type: \"line\",\n//     //     source: {\n//     //       type: \"geojson\",\n//     //       data: {\n//     //         type: \"Feature\",\n//     //         properties: {},\n//     //         geometry: {\n//     //           type: \"LineString\",\n//     //           coordinates: [\n//     //             [-112.987418, 37.198125],\n//     //             [-111.376161, 36.86438],\n//     //             [-112.115763, 36.058973],\n//     //             [-116.107963, 34.011646]\n//     //           ]\n//     //         }\n//     //       }\n//     //     },\n//     //     layout: {\n//     //       \"line-join\": \"round\",\n//     //       \"line-cap\": \"round\"\n//     //     },\n//     //     paint: {\n//     //       \"line-color\": \"#55c57a\",\n//     //       \"line-opacity\": 0.6,\n//     //       \"line-width\": 3\n//     //     }\n//     //   });\n//     // });\n//   }\n\n//   // render() {\n//   //   return (\n//   //     <div>\n//   //       <div\n//   //         ref={el => (this.mapContainer = el)}\n//   //         className=\"mapContainer\"\n//   //         style={{\n//   //           position: \"absolute\",\n//   //           top: \"0\",\n//   //           right: \"0\",\n//   //           left: \"0\",\n//   //           bottom: \"0\"\n//   //         }}\n//   //       />\n//   //     </div>\n//   //   );\n//   // }\n\n//   render() {\n//     const { lng, lat, zoom } = this.state;\n\n//     return (\n//       <div\n//         style={{\n//           position: \"relative\",\n//           height: \"65rem\"\n//         }}\n//       >\n//         <div\n//           className=\"sidebarStyle\"\n//           style={{\n//             display: \"inline-block\",\n//             position: \"absolute\",\n//             top: 0,\n//             left: 0,\n//             margin: \"12px\",\n//             backgroundColor: \"#404040\",\n//             color: \"#ffffff\",\n//             zIndex: \"1 !important\",\n//             padding: \"6px\",\n//             fontWeight: \"bold\"\n//           }}\n//         >\n//           <div>{`Longitude: ${lng} Latitude: ${lat} Zoom: ${zoom}`}</div>\n//         </div>\n//         <div\n//           // ref={el => (this.mapContainer = el)}\n//           ref={this.mapRef}\n//           className=\"mapContainer\"\n//           style={{\n//             position: \"absolute\",\n//             top: \"0\",\n//             right: \"0\",\n//             left: \"0\",\n//             bottom: \"0\",\n//             width: \"100%\"\n//           }}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// export default Map;\n\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n// // // // //\n\n// import React, { Component } from \"react\";\n// import mapboxgl from \"mapbox-gl\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import \"mapbox-gl/dist/mapbox-gl.css\";\n\n// import ReactMapGL from 'react-map-gl';\n\n// /*\n// .marker {\n//   background-image: url('../img/pin.png');\n//   background-size: cover;\n//   width: 32px;\n//   height: 40px;\n//   cursor: pointer;\n// }\n\n// .mapboxgl-popup {\n//   max-width: 25rem;\n// }\n\n// .mapboxgl-popup-content {\n//   text-align: center;\n//   font-family: 'Lato', sans-serif;\n//   padding: 1.5rem !important;\n//   font-size: 1.4rem;\n//   -webkit-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n//   box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n// }\n// */\n\n// const useStyles = makeStyles(theme => ({\n//   Map: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     margin: \"5rem 0\",\n//     width: \"100%\",\n//     position: \"relative\",\n//     height: \"65rem\"\n//   },\n//   map: {\n//     position: \"absolute\",\n//     top: \"0\",\n//     right: \"0\",\n//     left: \"0\",\n//     bottom: \"0\",\n//     width: \"100%\"\n//   }\n// }));\n\n// const geojson = {\n//   type: \"FeatureCollection\",\n//   features: [\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.987418, 37.198125]\n//       },\n//       properties: {\n//         description: \"Zion Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-111.376161, 36.86438]\n//       },\n//       properties: {\n//         description: \"Antelope Canyon\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.115763, 36.058973]\n//       },\n//       properties: {\n//         description: \"Grand Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-116.107963, 34.011646]\n//       },\n//       properties: {\n//         description: \"Joshua Tree National Park\"\n//       }\n//     }\n//   ]\n// };\n\n// const Map = () => {\n//   const classes = useStyles();\n//   // const [lng, seLng] = React.useState(5);\n//   // const [lat, setLat] = React.useState(34);\n//   // const [zoom, setZoom] = React.useState(2);\n//   const [map, setMap] = React.useState(null);\n//   const mapContainer = React.useRef(null);\n\n//   React.useEffect(() => {\n//     mapboxgl.accessToken =\n//       \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n//     const initializeMap = ({ setMap, mapContainer }) => {\n//       const map = new mapboxgl.Map({\n//         container: mapContainer.current,\n//         style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n//         center: [0, 0],\n//         zoom: 5\n//       });\n\n//       map.on(\"load\", () => {\n//         setMap(map);\n//         map.resize();\n//       });\n//     };\n\n//     if (!map) initializeMap({ setMap, mapContainer });\n//   }, [map]);\n\n//   // const map = new mapboxgl.Map({\n//   //   container: mapContainer,\n//   //   scrollZoom: false,\n//   //   style: \"mapbox://styles/mapbox/streets-v11\",\n//   //   center: [state.lng, state.lat],\n//   //   zoom: state.zoom\n//   // });\n\n//   // map.on(\"move\", () => {\n//   //   seLng(map.getCenter().lng.toFixed(4));\n//   //   setLat(map.getCenter().lat.toFixed(4));\n//   //   setZoom(map.getZoom().toFixed(2));\n//   // });\n\n//   // const bounds = new mapboxgl.LngLatBounds();\n\n//   // geojson.features.forEach(function(marker) {\n//   //   var el = document.createElement(\"div\");\n//   //   el.className = \"marker\";\n\n//   //   new mapboxgl.Marker({\n//   //     element: el,\n//   //     anchor: \"bottom\"\n//   //   })\n//   //     .setLngLat(marker.geometry.coordinates)\n//   //     .addTo(map);\n\n//   //   new mapboxgl.Popup({\n//   //     offset: 30,\n//   //     closeOnClick: false\n//   //   })\n//   //     .setLngLat(marker.geometry.coordinates)\n//   //     .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n//   //     .addTo(map);\n\n//   //   bounds.extend(marker.geometry.coordinates);\n//   // });\n\n//   // map.fitBounds(bounds, {\n//   //   padding: {\n//   //     top: 200,\n//   //     bottom: 150,\n//   //     left: 50,\n//   //     right: 50\n//   //   }\n//   // });\n\n//   // map.on(\"load\", function() {\n//   //   map.addLayer({\n//   //     id: \"route\",\n//   //     type: \"line\",\n//   //     source: {\n//   //       type: \"geojson\",\n//   //       data: {\n//   //         type: \"Feature\",\n//   //         properties: {},\n//   //         geometry: {\n//   //           type: \"LineString\",\n//   //           coordinates: [\n//   //             [-112.987418, 37.198125],\n//   //             [-111.376161, 36.86438],\n//   //             [-112.115763, 36.058973],\n//   //             [-116.107963, 34.011646]\n//   //           ]\n//   //         }\n//   //       }\n//   //     },\n//   //     layout: {\n//   //       \"line-join\": \"round\",\n//   //       \"line-cap\": \"round\"\n//   //     },\n//   //     paint: {\n//   //       \"line-color\": \"#55c57a\",\n//   //       \"line-opacity\": 0.6,\n//   //       \"line-width\": 3\n//   //     }\n//   //   });\n//   // });\n\n//   return (\n//     <div className={classes.Map}>\n//       {/* <div\n//           className=\"sidebarStyle\"\n//           style={{\n//             display: \"inline-block\",\n//             position: \"absolute\",\n//             top: 0,\n//             left: 0,\n//             margin: \"12px\",\n//             backgroundColor: \"#404040\",\n//             color: \"#ffffff\",\n//             zIndex: \"1 !important\",\n//             padding: \"6px\",\n//             fontWeight: \"bold\"\n//           }}\n//         >\n//           <div>\n//             Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n//             {this.state.zoom}\n//           </div>\n//         </div> */}\n//       <div ref={el => (mapContainer.current = el)} className={classes.map} />\n//     </div>\n//   );\n// };\n\n// export default Map;\n"]},"metadata":{},"sourceType":"module"}