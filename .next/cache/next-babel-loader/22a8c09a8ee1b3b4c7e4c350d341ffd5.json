{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nvar _jsxFileName = \"/Users/abdulaliyev/web-projects/travel-portal/client/components/home/TourCard.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport FitnessIcon from \"@material-ui/icons/FitnessCenterRounded\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Box from \"@material-ui/core/Box\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport moment from \"moment\";\nimport colorPerLetter from \"../utils/colorPerLetter\";\nimport getHost from \"../utils/getHost\";\nimport Spotlights from \"./Spotlights\";\nimport { colors } from \"../utils/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  difficultyTitle: {\n    textTransform: \"uppercase\",\n    fontWeight: 700,\n    marginBottom: \"1rem\"\n  },\n  summary: {\n    fontSize: \"1rem\"\n  }\n}));\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: colors.mainBlue\n  },\n  iconHover: {\n    color: colors.mainBlue\n  }\n})(Rating);\n\nconst TourCard = props => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n  const {\n    name,\n    createdAt,\n    summary,\n    imageCover,\n    difficulty,\n    duration,\n    startDates\n  } = props;\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  console.log(\"TourCard props = \", props);\n  const firstLetter = name.toLowerCase().split(\"the \")[1][0].toUpperCase();\n  const closestTourDate = moment(closestDate(startDates)).format(\"MMMM YYYY\");\n  console.log(\"closestTourDate = \", closestTourDate);\n  return __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(Card, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, __jsx(CardHeader, {\n    avatar: __jsx(Avatar, {\n      \"aria-label\": \"recipe\",\n      className: classes.avatar,\n      style: {\n        backgroundColor: colorPerLetter(firstLetter)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, firstLetter),\n    action: __jsx(IconButton, {\n      \"aria-label\": \"settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, __jsx(MoreVertIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })),\n    title: name,\n    subheader: moment(createdAt * 1).format(\"MMMM Do YYYY\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(CardMedia, {\n    className: classes.media,\n    image: `${getHost()}/img/tours/${imageCover}`,\n    title: \"Paella dish\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(Box, {\n    component: \"fieldset\",\n    mb: 3,\n    borderColor: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(Typography, {\n    component: \"legend\",\n    className: classes.difficultyTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, difficulty, \" \", duration, \"-day-trip\"), __jsx(StyledRating, {\n    name: \"Difficulty Level\",\n    precision: 1,\n    readOnly: true,\n    defaultValue: difficulty === \"easy\" ? 1 : difficulty === \"medium\" ? 2 : 3,\n    max: 3,\n    icon: __jsx(FitnessIcon, {\n      fontSize: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    className: classes.summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, summary))), __jsx(Spotlights, {\n    date: closestTourDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), __jsx(CardActions, {\n    disableSpacing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, __jsx(FavoriteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  })), __jsx(IconButton, {\n    \"aria-label\": \"share\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, __jsx(ShareIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })), __jsx(IconButton, {\n    className: clsx(classes.expand, {\n      [classes.expandOpen]: expanded\n    }),\n    onClick: handleExpandClick,\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"show more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, __jsx(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }))), __jsx(Collapse, {\n    in: expanded,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, __jsx(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Method:\"), __jsx(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10 minutes.\"), __jsx(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken and chorizo in the pan. Add piment\\xF3n, bay leaves, garlic, tomatoes, onion, salt and pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\"), __jsx(Typography, {\n    paragraph: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook again without stirring, until mussels have opened and rice is just tender, 5 to 7 minutes more. (Discard any mussels that don\\u2019t open.)\"), __jsx(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Set aside off of the heat to let rest for 10 minutes, and then serve.\")))));\n};\n\nfunction closestDate(dateStrings) {\n  const currentDate = _Date$now();\n\n  let date = -1;\n\n  if (dateStrings.length) {\n    let futureDateExists = dateStrings.some(d => _parseInt(d) > currentDate);\n\n    if (futureDateExists) {\n      for (let i = 0; i < dateStrings.length; i++) {\n        const dateItem = _parseInt(dateStrings[i]);\n\n        if (dateItem > currentDate) {\n          date = dateItem;\n          break;\n        }\n      }\n    } else {\n      for (let i = dateStrings.length - 1; i >= 0; i--) {\n        const dateItem = _parseInt(dateStrings[i]);\n\n        if (dateItem <= currentDate) {\n          date = dateItem;\n          break;\n        }\n      }\n    }\n  }\n\n  return date;\n}\n\nexport default TourCard;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/travel-portal/client/components/home/TourCard.tsx"],"names":["React","Grid","makeStyles","withStyles","FitnessIcon","clsx","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","IconButton","Typography","red","FavoriteIcon","ShareIcon","ExpandMoreIcon","MoreVertIcon","CardActionArea","Box","Rating","moment","colorPerLetter","getHost","Spotlights","colors","useStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","difficultyTitle","textTransform","fontWeight","marginBottom","summary","fontSize","StyledRating","iconFilled","color","mainBlue","iconHover","TourCard","props","classes","expanded","setExpanded","useState","name","createdAt","imageCover","difficulty","startDates","handleExpandClick","console","log","firstLetter","toLowerCase","split","toUpperCase","closestTourDate","closestDate","format","dateStrings","currentDate","date","length","futureDateExists","some","d","i","dateItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport FitnessIcon from \"@material-ui/icons/FitnessCenterRounded\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Box from \"@material-ui/core/Box\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport moment from \"moment\";\nimport colorPerLetter from \"../utils/colorPerLetter\";\nimport getHost from \"../utils/getHost\";\nimport Spotlights from \"./Spotlights\";\nimport { colors } from \"../utils/styles\";\n\ninterface Props {\n  name: string;\n  createdAt: number;\n  summary: string;\n  imageCover: string;\n  duration: number;\n  difficulty: string;\n  startDates: [string];\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  difficultyTitle: {\n    textTransform: \"uppercase\",\n    fontWeight: 700,\n    marginBottom: \"1rem\"\n  },\n  summary: {\n    fontSize: \"1rem\"\n  }\n}));\n\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: colors.mainBlue\n  },\n  iconHover: {\n    color: colors.mainBlue\n  }\n})(Rating);\n\nconst TourCard: React.FC<Props> = props => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const {\n    name,\n    createdAt,\n    summary,\n    imageCover,\n    difficulty,\n    duration,\n    startDates\n  } = props;\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  console.log(\"TourCard props = \", props);\n\n  const firstLetter = name\n    .toLowerCase()\n    .split(\"the \")[1][0]\n    .toUpperCase();\n\n  const closestTourDate = moment(closestDate(startDates)).format(\"MMMM YYYY\");\n\n  console.log(\"closestTourDate = \", closestTourDate);\n\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <Card className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar\n              aria-label=\"recipe\"\n              className={classes.avatar}\n              style={{ backgroundColor: colorPerLetter(firstLetter) }}\n            >\n              {firstLetter}\n            </Avatar>\n          }\n          action={\n            <IconButton aria-label=\"settings\">\n              <MoreVertIcon />\n            </IconButton>\n          }\n          title={name}\n          subheader={moment(createdAt * 1).format(\"MMMM Do YYYY\")}\n        />\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={`${getHost()}/img/tours/${imageCover}`}\n            title=\"Paella dish\"\n          />\n          <CardContent>\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n              <Typography\n                component=\"legend\"\n                className={classes.difficultyTitle}\n              >\n                {difficulty} {duration}-day-trip\n              </Typography>\n              <StyledRating\n                name=\"Difficulty Level\"\n                precision={1}\n                readOnly\n                defaultValue={\n                  difficulty === \"easy\" ? 1 : difficulty === \"medium\" ? 2 : 3\n                }\n                max={3}\n                icon={<FitnessIcon fontSize=\"inherit\" />}\n              />\n            </Box>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={classes.summary}\n            >\n              {summary}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <Spotlights date={closestTourDate} />\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"add to favorites\">\n            <FavoriteIcon />\n          </IconButton>\n          <IconButton aria-label=\"share\">\n            <ShareIcon />\n          </IconButton>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography paragraph>Method:</Typography>\n            <Typography paragraph>\n              Heat 1/2 cup of the broth in a pot until simmering, add saffron\n              and set aside for 10 minutes.\n            </Typography>\n            <Typography paragraph>\n              Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet\n              over medium-high heat. Add chicken, shrimp and chorizo, and cook,\n              stirring occasionally until lightly browned, 6 to 8 minutes.\n              Transfer shrimp to a large plate and set aside, leaving chicken\n              and chorizo in the pan. Add pimentón, bay leaves, garlic,\n              tomatoes, onion, salt and pepper, and cook, stirring often until\n              thickened and fragrant, about 10 minutes. Add saffron broth and\n              remaining 4 1/2 cups chicken broth; bring to a boil.\n            </Typography>\n            <Typography paragraph>\n              Add rice and stir very gently to distribute. Top with artichokes\n              and peppers, and cook without stirring, until most of the liquid\n              is absorbed, 15 to 18 minutes. Reduce heat to medium-low, add\n              reserved shrimp and mussels, tucking them down into the rice, and\n              cook again without stirring, until mussels have opened and rice is\n              just tender, 5 to 7 minutes more. (Discard any mussels that don’t\n              open.)\n            </Typography>\n            <Typography>\n              Set aside off of the heat to let rest for 10 minutes, and then\n              serve.\n            </Typography>\n          </CardContent>\n        </Collapse>\n      </Card>\n    </Grid>\n  );\n};\n\nfunction closestDate(dateStrings) {\n  const currentDate = Date.now();\n  let date = -1;\n\n  if (dateStrings.length) {\n    let futureDateExists = dateStrings.some(\n      (d: string) => parseInt(d) > currentDate\n    );\n    if (futureDateExists) {\n      for (let i = 0; i < dateStrings.length; i++) {\n        const dateItem = parseInt(dateStrings[i]);\n        if (dateItem > currentDate) {\n          date = dateItem;\n          break;\n        }\n      }\n    } else {\n      for (let i = dateStrings.length - 1; i >= 0; i--) {\n        const dateItem = parseInt(dateStrings[i]);\n        if (dateItem <= currentDate) {\n          date = dateItem;\n          break;\n        }\n      }\n    }\n  }\n\n  return date;\n}\n\nexport default TourCard;\n"]},"metadata":{},"sourceType":"module"}