{"ast":null,"code":"var _jsxFileName = \"/Users/abdulaliyev/web-projects/travel-portal/client/components/global/Layout.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider, createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport Navbar from \"./navbar/Navbar\";\nimport Footer from \"./footer/Footer\";\nimport Meta from \"./Meta\";\nimport \"./global.css\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    \"@global\": {\n      ul: {\n        margin: 0,\n        padding: 0,\n        listStyle: \"none\"\n      }\n    },\n    toolbar: {\n      flexWrap: \"wrap\"\n    },\n    toolbarTitle: {\n      flexGrow: 1\n    },\n    link: {\n      margin: theme.spacing(1, 1.5)\n    },\n    heroContent: {\n      padding: theme.spacing(8, 0, 6)\n    },\n    cardHeader: {\n      backgroundColor: theme.palette.type === \"dark\" ? theme.palette.grey[700] : theme.palette.grey[200]\n    },\n    cardPricing: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"baseline\",\n      marginBottom: theme.spacing(2)\n    }\n  };\n});\n\nvar Layout = function Layout(_ref) {\n  var children = _ref.children;\n  var prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  var theme = React.useMemo(function () {\n    return createMuiTheme({\n      palette: {\n        type: prefersDarkMode ? \"light\" : \"light\"\n      }\n    });\n  }, [prefersDarkMode]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), children, __jsx(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })));\n};\n\nexport default Layout;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/travel-portal/client/components/global/Layout.tsx"],"names":["React","useMediaQuery","CssBaseline","ThemeProvider","createMuiTheme","makeStyles","Navbar","Footer","Meta","useStyles","theme","ul","margin","padding","listStyle","toolbar","flexWrap","toolbarTitle","flexGrow","link","spacing","heroContent","cardHeader","backgroundColor","palette","type","grey","cardPricing","display","justifyContent","alignItems","marginBottom","Layout","children","prefersDarkMode","useMemo"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,SACEC,aADF,EAEEC,cAFF,EAGEC,UAHF,QAIO,0BAJP;AAKA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,cAAP;AAIA,IAAMC,SAAS,GAAGJ,UAAU,CAAC,UAAAK,KAAK;AAAA,SAAK;AACrC,eAAW;AACTC,MAAAA,EAAE,EAAE;AACFC,QAAAA,MAAM,EAAE,CADN;AAEFC,QAAAA,OAAO,EAAE,CAFP;AAGFC,QAAAA,SAAS,EAAE;AAHT;AADK,KAD0B;AAQrCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE;AADH,KAR4B;AAWrCC,IAAAA,YAAY,EAAE;AACZC,MAAAA,QAAQ,EAAE;AADE,KAXuB;AAcrCC,IAAAA,IAAI,EAAE;AACJP,MAAAA,MAAM,EAAEF,KAAK,CAACU,OAAN,CAAc,CAAd,EAAiB,GAAjB;AADJ,KAd+B;AAiBrCC,IAAAA,WAAW,EAAE;AACXR,MAAAA,OAAO,EAAEH,KAAK,CAACU,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADE,KAjBwB;AAoBrCE,IAAAA,UAAU,EAAE;AACVC,MAAAA,eAAe,EACbb,KAAK,CAACc,OAAN,CAAcC,IAAd,KAAuB,MAAvB,GACIf,KAAK,CAACc,OAAN,CAAcE,IAAd,CAAmB,GAAnB,CADJ,GAEIhB,KAAK,CAACc,OAAN,CAAcE,IAAd,CAAmB,GAAnB;AAJI,KApByB;AA0BrCC,IAAAA,WAAW,EAAE;AACXC,MAAAA,OAAO,EAAE,MADE;AAEXC,MAAAA,cAAc,EAAE,QAFL;AAGXC,MAAAA,UAAU,EAAE,UAHD;AAIXC,MAAAA,YAAY,EAAErB,KAAK,CAACU,OAAN,CAAc,CAAd;AAJH;AA1BwB,GAAL;AAAA,CAAN,CAA5B;;AAkCA,IAAMY,MAAuB,GAAG,SAA1BA,MAA0B,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAChD,MAAMC,eAAe,GAAGjC,aAAa,CAAC,8BAAD,CAArC;AAEA,MAAMS,KAAK,GAAGV,KAAK,CAACmC,OAAN,CACZ;AAAA,WACE/B,cAAc,CAAC;AACboB,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAES,eAAe,GAAG,OAAH,GAAa;AAD3B;AADI,KAAD,CADhB;AAAA,GADY,EAOZ,CAACA,eAAD,CAPY,CAAd;AAUA,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAExB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGuB,QAJH,EAKE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF;AAWD,CAxBD;;AA0BA,eAAeD,MAAf","sourcesContent":["import React from \"react\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Link from \"@material-ui/core/Link\";\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  makeStyles\n} from \"@material-ui/core/styles\";\nimport Navbar from \"./navbar/Navbar\";\nimport Footer from \"./footer/Footer\";\nimport Meta from \"./Meta\";\nimport \"./global.css\";\n\ninterface Props {}\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: \"none\"\n    }\n  },\n  toolbar: {\n    flexWrap: \"wrap\"\n  },\n  toolbarTitle: {\n    flexGrow: 1\n  },\n  link: {\n    margin: theme.spacing(1, 1.5)\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6)\n  },\n  cardHeader: {\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[700]\n        : theme.palette.grey[200]\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2)\n  }\n}));\n\nconst Layout: React.FC<Props> = ({ children }) => {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"light\" : \"light\"\n        }\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Meta />\n        <Navbar />\n        {children}\n        <Footer />\n      </ThemeProvider>\n    </React.Fragment>\n  );\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}