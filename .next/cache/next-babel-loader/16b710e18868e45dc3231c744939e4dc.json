{"ast":null,"code":"var _jsxFileName = \"/Users/abdulaliyev/web-projects/travel-portal/client/components/home/TourCard.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Router from \"next/router\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport moment from \"moment\";\nimport getHost from \"../utils/getHost\";\nimport Spotlights from \"./Spotlights\";\nimport { colors } from \"../utils/styles\";\nimport CardCollapsible from \"./CardCollapsible\";\nimport Difficulty from \"./Difficulty\";\nimport Actions from \"./Actions\";\nimport Header from \"./Header\";\nimport closestDate from \"./closestDate\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: \"100%\",\n    margin: \"auto\",\n    [theme.breakpoints.up(\"md\")]: {\n      maxWidth: 345\n    }\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  summary: {\n    fontSize: \"1rem\",\n    color: colors.mainBlack\n  }\n}));\n\nconst TourCard = ({\n  name,\n  slug,\n  price,\n  createdAt,\n  summary,\n  imageCover,\n  difficulty,\n  duration,\n  startDates,\n  startLocation,\n  locations,\n  maxGroupSize,\n  rating,\n  ratingsQuantity,\n  ratingsAverage\n}) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const closestTourDate = moment(closestDate(startDates)).format(\"MMMM YYYY\");\n  const place = startLocation && startLocation.description ? startLocation.description : \"\";\n  const stops = locations ? locations.length : 0;\n  return __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(Card, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(Header, {\n    name: name,\n    createdAt: createdAt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), __jsx(CardActionArea, {\n    onClick: () => {\n      Router.push(\"/tour/[slug]\", `/tour/${slug}`);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(CardMedia, {\n    className: classes.media,\n    image: `${getHost()}/img/tours/${imageCover}`,\n    title: \"Paella dish\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(Difficulty, {\n    difficulty: difficulty,\n    duration: duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    className: classes.summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, summary))), __jsx(Spotlights, {\n    date: closestTourDate,\n    place: place,\n    stops: stops,\n    people: maxGroupSize,\n    price: `${price}`.length < 5 ? price * 100 : price,\n    ratingsAverage: ratingsAverage,\n    ratingsQuantity: ratingsQuantity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), __jsx(Actions, {\n    handleExpandClick: handleExpandClick,\n    expanded: expanded,\n    slug: \"the-sea-explorer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), __jsx(CardCollapsible, {\n    expanded: expanded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })));\n};\n\nexport default TourCard;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/travel-portal/client/components/home/TourCard.tsx"],"names":["React","Router","Grid","makeStyles","Card","CardMedia","CardContent","Typography","CardActionArea","moment","getHost","Spotlights","colors","CardCollapsible","Difficulty","Actions","Header","closestDate","useStyles","theme","root","maxWidth","margin","breakpoints","up","media","height","paddingTop","summary","fontSize","color","mainBlack","TourCard","name","slug","price","createdAt","imageCover","difficulty","duration","startDates","startLocation","locations","maxGroupSize","rating","ratingsQuantity","ratingsAverage","classes","expanded","setExpanded","useState","handleExpandClick","closestTourDate","format","place","description","stops","length","push"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Router from \"next/router\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport moment from \"moment\";\nimport getHost from \"../utils/getHost\";\nimport Spotlights from \"./Spotlights\";\nimport { colors } from \"../utils/styles\";\nimport CardCollapsible from \"./CardCollapsible\";\nimport Difficulty from \"./Difficulty\";\nimport Actions from \"./Actions\";\nimport Header from \"./Header\";\nimport closestDate from \"./closestDate\";\n\nexport interface StartLocation {\n  description: string;\n  address: string;\n  type: string;\n  coordinates: [number];\n}\n\nexport interface Location {\n  _id: string;\n  description: string;\n  type: string;\n  day: number;\n  coordinates: [number];\n}\n\ninterface Props {\n  name: string;\n  slug: string;\n  price: number;\n  createdAt: number;\n  summary: string;\n  imageCover: string;\n  duration: number;\n  difficulty: string;\n  startDates: [string];\n  startLocation: StartLocation;\n  locations: [Location];\n  maxGroupSize: number;\n  rating: number;\n  ratingsAverage: number;\n  ratingsQuantity: number;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: \"100%\",\n    margin: \"auto\",\n    [theme.breakpoints.up(\"md\")]: {\n      maxWidth: 345\n    }\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  summary: {\n    fontSize: \"1rem\",\n    color: colors.mainBlack\n  }\n}));\n\nconst TourCard: React.FC<Props> = ({\n  name,\n  slug,\n  price,\n  createdAt,\n  summary,\n  imageCover,\n  difficulty,\n  duration,\n  startDates,\n  startLocation,\n  locations,\n  maxGroupSize,\n  rating,\n  ratingsQuantity,\n  ratingsAverage\n}) => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const closestTourDate = moment(closestDate(startDates)).format(\"MMMM YYYY\");\n  const place =\n    startLocation && startLocation.description ? startLocation.description : \"\";\n  const stops = locations ? locations.length : 0;\n\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <Card className={classes.root}>\n        <Header name={name} createdAt={createdAt} />\n        <CardActionArea\n          onClick={() => {\n            Router.push(\"/tour/[slug]\", `/tour/${slug}`);\n          }}\n        >\n          <CardMedia\n            className={classes.media}\n            image={`${getHost()}/img/tours/${imageCover}`}\n            title=\"Paella dish\"\n          />\n          <CardContent>\n            <Difficulty difficulty={difficulty} duration={duration} />\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={classes.summary}\n            >\n              {summary}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <Spotlights\n          date={closestTourDate}\n          place={place}\n          stops={stops}\n          people={maxGroupSize}\n          price={`${price}`.length < 5 ? price * 100 : price}\n          ratingsAverage={ratingsAverage}\n          ratingsQuantity={ratingsQuantity}\n        />\n        <Actions\n          handleExpandClick={handleExpandClick}\n          expanded={expanded}\n          slug={\"the-sea-explorer\"}\n        />\n        <CardCollapsible expanded={expanded} />\n      </Card>\n    </Grid>\n  );\n};\n\nexport default TourCard;\n"]},"metadata":{},"sourceType":"module"}