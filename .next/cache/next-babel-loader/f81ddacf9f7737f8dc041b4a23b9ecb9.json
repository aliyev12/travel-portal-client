{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/abdulaliyev/web-projects/travel-portal/client/components/home/TourCard.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport moment from \"moment\";\nimport colorPerLetter from \"../utils/colorPerLetter\";\nimport getHost from \"../utils/getHost\";\nimport Spotlights from \"./Spotlights\";\nimport { colors } from \"../utils/styles\";\nimport CardCollapsible from \"./CardCollapsible\";\nimport Difficulty from \"./Difficulty\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      maxWidth: 345\n    },\n    media: {\n      height: 0,\n      paddingTop: \"56.25%\" // 16:9\n\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    expandOpen: {\n      transform: \"rotate(180deg)\"\n    },\n    avatar: {\n      backgroundColor: red[500]\n    },\n    summary: {\n      fontSize: \"1rem\",\n      color: colors.mainBlack\n    }\n  };\n});\n\nvar TourCard = function TourCard(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expanded = _React$useState2[0],\n      setExpanded = _React$useState2[1];\n\n  var name = props.name,\n      createdAt = props.createdAt,\n      summary = props.summary,\n      imageCover = props.imageCover,\n      difficulty = props.difficulty,\n      duration = props.duration,\n      startDates = props.startDates,\n      startLocation = props.startLocation,\n      locations = props.locations,\n      maxGroupSize = props.maxGroupSize;\n\n  var handleExpandClick = function handleExpandClick() {\n    setExpanded(!expanded);\n  };\n\n  var firstLetter = name.toLowerCase().split(\"the \")[1][0].toUpperCase();\n  var closestTourDate = moment(closestDate(startDates)).format(\"MMMM YYYY\");\n  var place = startLocation && startLocation.description ? startLocation.description : \"\";\n  var stops = locations ? locations.length : 0;\n  return __jsx(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(Card, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(CardHeader, {\n    avatar: __jsx(Avatar, {\n      \"aria-label\": \"recipe\",\n      className: classes.avatar,\n      style: {\n        backgroundColor: colorPerLetter(firstLetter)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, firstLetter),\n    action: __jsx(IconButton, {\n      \"aria-label\": \"settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, __jsx(MoreVertIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })),\n    title: name,\n    subheader: moment(createdAt * 1).format(\"MMMM Do YYYY\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(CardMedia, {\n    className: classes.media,\n    image: \"\".concat(getHost(), \"/img/tours/\").concat(imageCover),\n    title: \"Paella dish\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(Difficulty, {\n    difficulty: difficulty,\n    duration: duration,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    className: classes.summary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, summary))), __jsx(Spotlights, {\n    date: closestTourDate,\n    place: place,\n    stops: stops,\n    people: maxGroupSize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), __jsx(CardActions, {\n    disableSpacing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, __jsx(FavoriteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), __jsx(IconButton, {\n    \"aria-label\": \"share\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, __jsx(ShareIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), __jsx(IconButton, {\n    className: clsx(classes.expand, _defineProperty({}, classes.expandOpen, expanded)),\n    onClick: handleExpandClick,\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"show more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(ExpandMoreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }))), __jsx(CardCollapsible, {\n    expanded: expanded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })));\n};\n\nfunction closestDate(dateStrings) {\n  var currentDate = _Date$now();\n\n  var date = -1;\n\n  if (dateStrings.length) {\n    var futureDateExists = dateStrings.some(function (d) {\n      return _parseInt(d) > currentDate;\n    });\n\n    if (futureDateExists) {\n      for (var i = 0; i < dateStrings.length; i++) {\n        var dateItem = _parseInt(dateStrings[i]);\n\n        if (dateItem > currentDate) {\n          date = dateItem;\n          break;\n        }\n      }\n    } else {\n      for (var _i = dateStrings.length - 1; _i >= 0; _i--) {\n        var _dateItem = _parseInt(dateStrings[_i]);\n\n        if (_dateItem <= currentDate) {\n          date = _dateItem;\n          break;\n        }\n      }\n    }\n  }\n\n  return date;\n}\n\nexport default TourCard;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/travel-portal/client/components/home/TourCard.tsx"],"names":["React","Grid","makeStyles","clsx","Card","CardHeader","CardMedia","CardContent","CardActions","Avatar","IconButton","Typography","red","FavoriteIcon","ShareIcon","ExpandMoreIcon","MoreVertIcon","CardActionArea","moment","colorPerLetter","getHost","Spotlights","colors","CardCollapsible","Difficulty","useStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","summary","fontSize","color","mainBlack","TourCard","props","classes","useState","expanded","setExpanded","name","createdAt","imageCover","difficulty","startDates","startLocation","locations","maxGroupSize","handleExpandClick","firstLetter","toLowerCase","split","toUpperCase","closestTourDate","closestDate","format","place","description","stops","length","dateStrings","currentDate","date","futureDateExists","some","d","i","dateItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport moment from \"moment\";\nimport colorPerLetter from \"../utils/colorPerLetter\";\nimport getHost from \"../utils/getHost\";\nimport Spotlights from \"./Spotlights\";\nimport { colors } from \"../utils/styles\";\nimport CardCollapsible from \"./CardCollapsible\";\nimport Difficulty from \"./Difficulty\";\n\nexport interface StartLocation {\n  description: string;\n  address: string;\n  type: string;\n  coordinates: [number];\n}\n\nexport interface Location {\n  _id: string;\n  description: string;\n  type: string;\n  day: number;\n  coordinates: [number];\n}\n\ninterface Props {\n  name: string;\n  createdAt: number;\n  summary: string;\n  imageCover: string;\n  duration: number;\n  difficulty: string;\n  startDates: [string];\n  startLocation: StartLocation;\n  locations: [Location];\n  maxGroupSize: number;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  summary: {\n    fontSize: \"1rem\",\n    color: colors.mainBlack\n  }\n}));\n\nconst TourCard: React.FC<Props> = props => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const {\n    name,\n    createdAt,\n    summary,\n    imageCover,\n    difficulty,\n    duration,\n    startDates,\n    startLocation,\n    locations,\n    maxGroupSize\n  } = props;\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const firstLetter = name\n    .toLowerCase()\n    .split(\"the \")[1][0]\n    .toUpperCase();\n\n  const closestTourDate = moment(closestDate(startDates)).format(\"MMMM YYYY\");\n  const place =\n    startLocation && startLocation.description ? startLocation.description : \"\";\n  const stops = locations ? locations.length : 0;\n\n  return (\n    <Grid item xs={12} md={6} lg={4}>\n      <Card className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar\n              aria-label=\"recipe\"\n              className={classes.avatar}\n              style={{ backgroundColor: colorPerLetter(firstLetter) }}\n            >\n              {firstLetter}\n            </Avatar>\n          }\n          action={\n            <IconButton aria-label=\"settings\">\n              <MoreVertIcon />\n            </IconButton>\n          }\n          title={name}\n          subheader={moment(createdAt * 1).format(\"MMMM Do YYYY\")}\n        />\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={`${getHost()}/img/tours/${imageCover}`}\n            title=\"Paella dish\"\n          />\n          <CardContent>\n            <Difficulty difficulty={difficulty} duration={duration} />\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={classes.summary}\n            >\n              {summary}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <Spotlights\n          date={closestTourDate}\n          place={place}\n          stops={stops}\n          people={maxGroupSize}\n        />\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"add to favorites\">\n            <FavoriteIcon />\n          </IconButton>\n          <IconButton aria-label=\"share\">\n            <ShareIcon />\n          </IconButton>\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <CardCollapsible expanded={expanded} />\n      </Card>\n    </Grid>\n  );\n};\n\nfunction closestDate(dateStrings) {\n  const currentDate = Date.now();\n  let date = -1;\n\n  if (dateStrings.length) {\n    let futureDateExists = dateStrings.some(\n      (d: string) => parseInt(d) > currentDate\n    );\n    if (futureDateExists) {\n      for (let i = 0; i < dateStrings.length; i++) {\n        const dateItem = parseInt(dateStrings[i]);\n        if (dateItem > currentDate) {\n          date = dateItem;\n          break;\n        }\n      }\n    } else {\n      for (let i = dateStrings.length - 1; i >= 0; i--) {\n        const dateItem = parseInt(dateStrings[i]);\n        if (dateItem <= currentDate) {\n          date = dateItem;\n          break;\n        }\n      }\n    }\n  }\n\n  return date;\n}\n\nexport default TourCard;\n"]},"metadata":{},"sourceType":"module"}