{"ast":null,"code":"var _jsxFileName = \"/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Map.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n/*\n.marker {\n  background-image: url('../img/pin.png');\n  background-size: cover;\n  width: 32px;\n  height: 40px;\n  cursor: pointer;\n}\n\n.mapboxgl-popup {\n  max-width: 25rem;\n}\n\n.mapboxgl-popup-content {\n  text-align: center;\n  font-family: 'Lato', sans-serif;\n  padding: 1.5rem !important;\n  font-size: 1.4rem;\n  -webkit-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n}\n*/\n\nconst useStyles = makeStyles(theme => ({\n  Map: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"5rem 0\",\n    width: \"100%\",\n    position: \"relative\",\n    height: \"65rem\"\n  },\n  map: {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    left: \"0\",\n    bottom: \"0\",\n    width: \"100%\"\n  }\n}));\nconst geojson = {\n  type: \"FeatureCollection\",\n  features: [{\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-112.987418, 37.198125]\n    },\n    properties: {\n      description: \"Zion Canyon National Park\"\n    }\n  }, {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-111.376161, 36.86438]\n    },\n    properties: {\n      description: \"Antelope Canyon\"\n    }\n  }, {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-112.115763, 36.058973]\n    },\n    properties: {\n      description: \"Grand Canyon National Park\"\n    }\n  }, {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-116.107963, 34.011646]\n    },\n    properties: {\n      description: \"Joshua Tree National Park\"\n    }\n  }]\n};\n\nconst Map = () => {\n  const classes = useStyles();\n  const [lng, seLng] = React.useState(5);\n  const [lat, setLat] = React.useState(34);\n  const [zoom, setZoom] = React.useState(2);\n  const [map, setMap] = React.useState(null);\n  const mapContainer = React.useRef(null);\n  React.useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n\n    const initializeMap = ({\n      setMap,\n      mapContainer\n    }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        // stylesheet location\n        center: [0, 0],\n        zoom: 5\n      });\n      map.on(\"load\", () => {\n        setMap(map);\n        map.resize();\n      });\n    };\n\n    if (!map) initializeMap({\n      setMap,\n      mapContainer\n    });\n  }, [map]); // const map = new mapboxgl.Map({\n  //   container: mapContainer,\n  //   scrollZoom: false,\n  //   style: \"mapbox://styles/mapbox/streets-v11\",\n  //   center: [state.lng, state.lat],\n  //   zoom: state.zoom\n  // });\n  // map.on(\"move\", () => {\n  //   seLng(map.getCenter().lng.toFixed(4));\n  //   setLat(map.getCenter().lat.toFixed(4));\n  //   setZoom(map.getZoom().toFixed(2));\n  // });\n  // const bounds = new mapboxgl.LngLatBounds();\n  // geojson.features.forEach(function(marker) {\n  //   var el = document.createElement(\"div\");\n  //   el.className = \"marker\";\n  //   new mapboxgl.Marker({\n  //     element: el,\n  //     anchor: \"bottom\"\n  //   })\n  //     .setLngLat(marker.geometry.coordinates)\n  //     .addTo(map);\n  //   new mapboxgl.Popup({\n  //     offset: 30,\n  //     closeOnClick: false\n  //   })\n  //     .setLngLat(marker.geometry.coordinates)\n  //     .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n  //     .addTo(map);\n  //   bounds.extend(marker.geometry.coordinates);\n  // });\n  // map.fitBounds(bounds, {\n  //   padding: {\n  //     top: 200,\n  //     bottom: 150,\n  //     left: 50,\n  //     right: 50\n  //   }\n  // });\n  // map.on(\"load\", function() {\n  //   map.addLayer({\n  //     id: \"route\",\n  //     type: \"line\",\n  //     source: {\n  //       type: \"geojson\",\n  //       data: {\n  //         type: \"Feature\",\n  //         properties: {},\n  //         geometry: {\n  //           type: \"LineString\",\n  //           coordinates: [\n  //             [-112.987418, 37.198125],\n  //             [-111.376161, 36.86438],\n  //             [-112.115763, 36.058973],\n  //             [-116.107963, 34.011646]\n  //           ]\n  //         }\n  //       }\n  //     },\n  //     layout: {\n  //       \"line-join\": \"round\",\n  //       \"line-cap\": \"round\"\n  //     },\n  //     paint: {\n  //       \"line-color\": \"#55c57a\",\n  //       \"line-opacity\": 0.6,\n  //       \"line-width\": 3\n  //     }\n  //   });\n  // });\n\n  return __jsx(\"div\", {\n    className: classes.Map,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    ref: el => mapContainer.current = el,\n    className: classes.map,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }));\n};\n\nexport default Map; // import React, { Component } from \"react\";\n// import mapboxgl from \"mapbox-gl\";\n// // pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\n// mapboxgl.accessToken =\n//   \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n// const geojson = {\n//   type: \"FeatureCollection\",\n//   features: [\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.987418, 37.198125]\n//       },\n//       properties: {\n//         description: \"Zion Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-111.376161, 36.86438]\n//       },\n//       properties: {\n//         description: \"Antelope Canyon\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.115763, 36.058973]\n//       },\n//       properties: {\n//         description: \"Grand Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-116.107963, 34.011646]\n//       },\n//       properties: {\n//         description: \"Joshua Tree National Park\"\n//       }\n//     }\n//   ]\n// };\n// class Map extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       lng: 5,\n//       lat: 34,\n//       zoom: 2\n//     };\n//   }\n//   componentDidMount() {\n//     const map = new mapboxgl.Map({\n//       container: this.mapContainer,\n//       scrollZoom: false,\n//       style: \"mapbox://styles/mapbox/streets-v11\",\n//       center: [this.state.lng, this.state.lat],\n//       zoom: this.state.zoom\n//     });\n//     map.on(\"move\", () => {\n//       this.setState({\n//         lng: map.getCenter().lng.toFixed(4),\n//         lat: map.getCenter().lat.toFixed(4),\n//         zoom: map.getZoom().toFixed(2)\n//       });\n//     });\n//     const bounds = new mapboxgl.LngLatBounds();\n//     geojson.features.forEach(function(marker) {\n//       var el = document.createElement(\"div\");\n//       el.className = \"marker\";\n//       new mapboxgl.Marker({\n//         element: el,\n//         anchor: \"bottom\"\n//       })\n//         .setLngLat(marker.geometry.coordinates)\n//         .addTo(map);\n//       new mapboxgl.Popup({\n//         offset: 30,\n//         closeOnClick: false\n//       })\n//         .setLngLat(marker.geometry.coordinates)\n//         .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n//         .addTo(map);\n//       bounds.extend(marker.geometry.coordinates);\n//     });\n//     map.fitBounds(bounds, {\n//       padding: {\n//         top: 200,\n//         bottom: 150,\n//         left: 50,\n//         right: 50\n//       }\n//     });\n//     map.on(\"load\", function() {\n//       map.addLayer({\n//         id: \"route\",\n//         type: \"line\",\n//         source: {\n//           type: \"geojson\",\n//           data: {\n//             type: \"Feature\",\n//             properties: {},\n//             geometry: {\n//               type: \"LineString\",\n//               coordinates: [\n//                 [-112.987418, 37.198125],\n//                 [-111.376161, 36.86438],\n//                 [-112.115763, 36.058973],\n//                 [-116.107963, 34.011646]\n//               ]\n//             }\n//           }\n//         },\n//         layout: {\n//           \"line-join\": \"round\",\n//           \"line-cap\": \"round\"\n//         },\n//         paint: {\n//           \"line-color\": \"#55c57a\",\n//           \"line-opacity\": 0.6,\n//           \"line-width\": 3\n//         }\n//       });\n//     });\n//   }\n//   // render() {\n//   //   return (\n//   //     <div>\n//   //       <div\n//   //         ref={el => (this.mapContainer = el)}\n//   //         className=\"mapContainer\"\n//   //         style={{\n//   //           position: \"absolute\",\n//   //           top: \"0\",\n//   //           right: \"0\",\n//   //           left: \"0\",\n//   //           bottom: \"0\"\n//   //         }}\n//   //       />\n//   //     </div>\n//   //   );\n//   // }\n//   render() {\n//     return (\n//       <div\n//         style={{\n//           position: \"relative\",\n//           height: \"65rem\"\n//         }}\n//       >\n//         <div\n//           className=\"sidebarStyle\"\n//           style={{\n//             display: \"inline-block\",\n//             position: \"absolute\",\n//             top: 0,\n//             left: 0,\n//             margin: \"12px\",\n//             backgroundColor: \"#404040\",\n//             color: \"#ffffff\",\n//             zIndex: \"1 !important\",\n//             padding: \"6px\",\n//             fontWeight: \"bold\"\n//           }}\n//         >\n//           <div>\n//             Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n//             {this.state.zoom}\n//           </div>\n//         </div>\n//         <div\n//           ref={el => (this.mapContainer = el)}\n//           className=\"mapContainer\"\n//           style={{\n//             position: \"absolute\",\n//             top: \"0\",\n//             right: \"0\",\n//             left: \"0\",\n//             bottom: \"0\",\n//             width: \"100%\"\n//           }}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// export default Map;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Map.js"],"names":["React","Component","mapboxgl","makeStyles","useStyles","theme","Map","display","justifyContent","alignItems","margin","width","position","height","map","top","right","left","bottom","geojson","type","features","geometry","coordinates","properties","description","classes","lng","seLng","useState","lat","setLat","zoom","setZoom","setMap","mapContainer","useRef","useEffect","accessToken","initializeMap","container","current","style","center","on","resize","el"],"mappings":"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I,CAAC/B,GAAL,EAAUyB,aAAa,CAAC;AAAEL,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAD,CAAb;AACX,GAlBD,EAkBG,CAACrB,GAAD,CAlBH,EARgB,CA4BhB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE;AAAK,IAAA,SAAS,EAAEY,OAAO,CAACpB,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBE;AAAK,IAAA,GAAG,EAAEwC,EAAE,IAAKX,YAAY,CAACM,OAAb,GAAuBK,EAAxC;AAA6C,IAAA,SAAS,EAAEpB,OAAO,CAACZ,GAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADF;AAyBD,CApID;;AAsIA,eAAeR,GAAfsourcesContent":["import React, { Component } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n/*\n.marker {\n  background-image: url('../img/pin.png');\n  background-size: cover;\n  width: 32px;\n  height: 40px;\n  cursor: pointer;\n}\n\n.mapboxgl-popup {\n  max-width: 25rem;\n}\n\n.mapboxgl-popup-content {\n  text-align: center;\n  font-family: 'Lato', sans-serif;\n  padding: 1.5rem !important;\n  font-size: 1.4rem;\n  -webkit-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n}\n*/\n\nconst useStyles = makeStyles(theme => ({\n  Map: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"5rem 0\",\n    width: \"100%\",\n    position: \"relative\",\n    height: \"65rem\"\n  },\n  map: {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    left: \"0\",\n    bottom: \"0\",\n    width: \"100%\"\n  }\n}));\n\nconst geojson = {\n  type: \"FeatureCollection\",\n  features: [\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-112.987418, 37.198125]\n      },\n      properties: {\n        description: \"Zion Canyon National Park\"\n      }\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-111.376161, 36.86438]\n      },\n      properties: {\n        description: \"Antelope Canyon\"\n      }\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-112.115763, 36.058973]\n      },\n      properties: {\n        description: \"Grand Canyon National Park\"\n      }\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-116.107963, 34.011646]\n      },\n      properties: {\n        description: \"Joshua Tree National Park\"\n      }\n    }\n  ]\n};\n\nconst Map = () => {\n  const classes = useStyles();\n  const [lng, seLng] = React.useState(5);\n  const [lat, setLat] = React.useState(34);\n  const [zoom, setZoom] = React.useState(2);\n  const [map, setMap] = React.useState(null);\n  const mapContainer = React.useRef(null);\n\n  React.useEffect(() => {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n    const initializeMap = ({ setMap, mapContainer }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n        center: [0, 0],\n        zoom: 5\n      });\n\n      map.on(\"load\", () => {\n        setMap(map);\n        map.resize();\n      });\n    };\n\n    if (!map) initializeMap({ setMap, mapContainer });\n  }, [map]);\n\n  // const map = new mapboxgl.Map({\n  //   container: mapContainer,\n  //   scrollZoom: false,\n  //   style: \"mapbox://styles/mapbox/streets-v11\",\n  //   center: [state.lng, state.lat],\n  //   zoom: state.zoom\n  // });\n\n  // map.on(\"move\", () => {\n  //   seLng(map.getCenter().lng.toFixed(4));\n  //   setLat(map.getCenter().lat.toFixed(4));\n  //   setZoom(map.getZoom().toFixed(2));\n  // });\n\n  // const bounds = new mapboxgl.LngLatBounds();\n\n  // geojson.features.forEach(function(marker) {\n  //   var el = document.createElement(\"div\");\n  //   el.className = \"marker\";\n\n  //   new mapboxgl.Marker({\n  //     element: el,\n  //     anchor: \"bottom\"\n  //   })\n  //     .setLngLat(marker.geometry.coordinates)\n  //     .addTo(map);\n\n  //   new mapboxgl.Popup({\n  //     offset: 30,\n  //     closeOnClick: false\n  //   })\n  //     .setLngLat(marker.geometry.coordinates)\n  //     .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n  //     .addTo(map);\n\n  //   bounds.extend(marker.geometry.coordinates);\n  // });\n\n  // map.fitBounds(bounds, {\n  //   padding: {\n  //     top: 200,\n  //     bottom: 150,\n  //     left: 50,\n  //     right: 50\n  //   }\n  // });\n\n  // map.on(\"load\", function() {\n  //   map.addLayer({\n  //     id: \"route\",\n  //     type: \"line\",\n  //     source: {\n  //       type: \"geojson\",\n  //       data: {\n  //         type: \"Feature\",\n  //         properties: {},\n  //         geometry: {\n  //           type: \"LineString\",\n  //           coordinates: [\n  //             [-112.987418, 37.198125],\n  //             [-111.376161, 36.86438],\n  //             [-112.115763, 36.058973],\n  //             [-116.107963, 34.011646]\n  //           ]\n  //         }\n  //       }\n  //     },\n  //     layout: {\n  //       \"line-join\": \"round\",\n  //       \"line-cap\": \"round\"\n  //     },\n  //     paint: {\n  //       \"line-color\": \"#55c57a\",\n  //       \"line-opacity\": 0.6,\n  //       \"line-width\": 3\n  //     }\n  //   });\n  // });\n\n  return (\n    <div className={classes.Map}>\n      {/* <div\n          className=\"sidebarStyle\"\n          style={{\n            display: \"inline-block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: \"12px\",\n            backgroundColor: \"#404040\",\n            color: \"#ffffff\",\n            zIndex: \"1 !important\",\n            padding: \"6px\",\n            fontWeight: \"bold\"\n          }}\n        >\n          <div>\n            Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n            {this.state.zoom}\n          </div>\n        </div> */}\n      <div ref={el => (mapContainer.current = el)} className={classes.map} />\n    </div>\n  );\n};\n\nexport default Map;\n\n// import React, { Component } from \"react\";\n// import mapboxgl from \"mapbox-gl\";\n// // pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\n\n// mapboxgl.accessToken =\n//   \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n\n// const geojson = {\n//   type: \"FeatureCollection\",\n//   features: [\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.987418, 37.198125]\n//       },\n//       properties: {\n//         description: \"Zion Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-111.376161, 36.86438]\n//       },\n//       properties: {\n//         description: \"Antelope Canyon\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.115763, 36.058973]\n//       },\n//       properties: {\n//         description: \"Grand Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-116.107963, 34.011646]\n//       },\n//       properties: {\n//         description: \"Joshua Tree National Park\"\n//       }\n//     }\n//   ]\n// };\n\n// class Map extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       lng: 5,\n//       lat: 34,\n//       zoom: 2\n//     };\n//   }\n\n//   componentDidMount() {\n//     const map = new mapboxgl.Map({\n//       container: this.mapContainer,\n//       scrollZoom: false,\n//       style: \"mapbox://styles/mapbox/streets-v11\",\n//       center: [this.state.lng, this.state.lat],\n//       zoom: this.state.zoom\n//     });\n\n//     map.on(\"move\", () => {\n//       this.setState({\n//         lng: map.getCenter().lng.toFixed(4),\n//         lat: map.getCenter().lat.toFixed(4),\n//         zoom: map.getZoom().toFixed(2)\n//       });\n//     });\n\n//     const bounds = new mapboxgl.LngLatBounds();\n\n//     geojson.features.forEach(function(marker) {\n//       var el = document.createElement(\"div\");\n//       el.className = \"marker\";\n\n//       new mapboxgl.Marker({\n//         element: el,\n//         anchor: \"bottom\"\n//       })\n//         .setLngLat(marker.geometry.coordinates)\n//         .addTo(map);\n\n//       new mapboxgl.Popup({\n//         offset: 30,\n//         closeOnClick: false\n//       })\n//         .setLngLat(marker.geometry.coordinates)\n//         .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n//         .addTo(map);\n\n//       bounds.extend(marker.geometry.coordinates);\n//     });\n\n//     map.fitBounds(bounds, {\n//       padding: {\n//         top: 200,\n//         bottom: 150,\n//         left: 50,\n//         right: 50\n//       }\n//     });\n\n//     map.on(\"load\", function() {\n//       map.addLayer({\n//         id: \"route\",\n//         type: \"line\",\n//         source: {\n//           type: \"geojson\",\n//           data: {\n//             type: \"Feature\",\n//             properties: {},\n//             geometry: {\n//               type: \"LineString\",\n//               coordinates: [\n//                 [-112.987418, 37.198125],\n//                 [-111.376161, 36.86438],\n//                 [-112.115763, 36.058973],\n//                 [-116.107963, 34.011646]\n//               ]\n//             }\n//           }\n//         },\n//         layout: {\n//           \"line-join\": \"round\",\n//           \"line-cap\": \"round\"\n//         },\n//         paint: {\n//           \"line-color\": \"#55c57a\",\n//           \"line-opacity\": 0.6,\n//           \"line-width\": 3\n//         }\n//       });\n//     });\n//   }\n\n//   // render() {\n//   //   return (\n//   //     <div>\n//   //       <div\n//   //         ref={el => (this.mapContainer = el)}\n//   //         className=\"mapContainer\"\n//   //         style={{\n//   //           position: \"absolute\",\n//   //           top: \"0\",\n//   //           right: \"0\",\n//   //           left: \"0\",\n//   //           bottom: \"0\"\n//   //         }}\n//   //       />\n//   //     </div>\n//   //   );\n//   // }\n\n//   render() {\n//     return (\n//       <div\n//         style={{\n//           position: \"relative\",\n//           height: \"65rem\"\n//         }}\n//       >\n//         <div\n//           className=\"sidebarStyle\"\n//           style={{\n//             display: \"inline-block\",\n//             position: \"absolute\",\n//             top: 0,\n//             left: 0,\n//             margin: \"12px\",\n//             backgroundColor: \"#404040\",\n//             color: \"#ffffff\",\n//             zIndex: \"1 !important\",\n//             padding: \"6px\",\n//             fontWeight: \"bold\"\n//           }}\n//         >\n//           <div>\n//             Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n//             {this.state.zoom}\n//           </div>\n//         </div>\n//         <div\n//           ref={el => (this.mapContainer = el)}\n//           className=\"mapContainer\"\n//           style={{\n//             position: \"absolute\",\n//             top: \"0\",\n//             right: \"0\",\n//             left: \"0\",\n//             bottom: \"0\",\n//             width: \"100%\"\n//           }}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n// export default Map;\n"]},"metadata":{},"sourceType":"module"}