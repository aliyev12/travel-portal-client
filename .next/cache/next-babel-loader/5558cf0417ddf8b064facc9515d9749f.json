{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nvar _jsxFileName = \"/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Images.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Slider from \"react-slick\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Img from \"react-image\";\nimport { imgUrl } from \"../utils/helpers\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nconst sliderSettings = {\n  dots: true,\n  infinite: true,\n  slidesToScroll: 1,\n  // autoplay: true,\n  autoplaySpeed: 2000,\n  speed: 500,\n  slidesToShow: 1,\n  pauseOnHover: true,\n  pauseOnFocus: true\n};\nconst useStyles = makeStyles(theme => ({\n  Images: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"5rem 0\"\n  },\n  sliderContainer: {\n    // height: \"500px\",\n    width: \"500px\"\n  },\n  image: {\n    width: \"100%\" // height: \"200px\"\n\n  }\n}));\n\nconst Images = ({\n  images\n}) => {\n  const [playing, setPlaying] = React.useState(true);\n  const [slickImages, setSlickImages] = React.useState([]);\n  const classes = useStyles();\n  let slider;\n  React.useEffect(() => {\n    const imagesArr = [];\n\n    if (images && images.length && _Array$isArray(images)) {\n      images.forEach(img => {\n        imagesArr.push(__jsx(\"div\", {\n          key: img,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, __jsx(Img, {\n          src: imgUrl(\"tours\", img),\n          alt: img,\n          className: classes.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        })));\n      });\n    }\n\n    setSlickImages(imagesArr);\n  }, [images]);\n\n  const play = () => slider.slickPlay();\n\n  const pause = () => slider.slickPause();\n\n  return __jsx(\"div\", {\n    className: classes.Images,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.sliderContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Slider, _extends({\n    ref: sl => slider = sl\n  }, sliderSettings, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), slickImages && slickImages.length ? slickImages : __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))));\n};\n\nexport default Images;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Images.tsx"],"names":["React","Slider","makeStyles","Img","imgUrl","sliderSettings","dots","infinite","slidesToScroll","autoplaySpeed","speed","slidesToShow","pauseOnHover","pauseOnFocus","useStyles","theme","Images","display","justifyContent","alignItems","margin","sliderContainer","width","image","images","playing","setPlaying","useState","slickImages","setSlickImages","classes","slider","useEffect","imagesArr","length","forEach","img","push","play","slickPlay","pause","slickPause","sl"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Slider from \"react-slick\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Img from \"react-image\";\nimport PauseIcon from \"@material-ui/icons/PauseRounded\";\nimport PlayIcon from \"@material-ui/icons/PlayArrowRounded\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { imgUrl } from \"../utils/helpers\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\ninterface Props {\n  images: [string];\n}\n\nconst sliderSettings = {\n  dots: true,\n  infinite: true,\n  slidesToScroll: 1,\n  // autoplay: true,\n  autoplaySpeed: 2000,\n  speed: 500,\n  slidesToShow: 1,\n  pauseOnHover: true,\n  pauseOnFocus: true\n};\n\nconst useStyles = makeStyles(theme => ({\n  Images: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: \"5rem 0\"\n  },\n  sliderContainer: {\n    // height: \"500px\",\n    width: \"500px\"\n  },\n  image: {\n    width: \"100%\"\n    // height: \"200px\"\n  }\n}));\n\nconst Images: React.FC<Props> = ({ images }) => {\n  const [playing, setPlaying] = React.useState(true);\n  const [slickImages, setSlickImages] = React.useState([]);\n  const classes = useStyles();\n\n  let slider;\n\n  React.useEffect(() => {\n    const imagesArr = [];\n    if (images && images.length && Array.isArray(images)) {\n      images.forEach(img => {\n        imagesArr.push(\n          <div key={img}>\n            <Img\n              src={imgUrl(\"tours\", img)}\n              alt={img}\n              className={classes.image}\n            />\n          </div>\n        );\n      });\n    }\n    setSlickImages(imagesArr);\n  }, [images]);\n\n  const play = () => slider.slickPlay();\n  const pause = () => slider.slickPause();\n\n  return (\n    <div className={classes.Images}>\n      <div className={classes.sliderContainer}>\n        <Slider ref={sl => (slider = sl)} {...sliderSettings}>\n          {slickImages && slickImages.length ? slickImages : <div></div>}\n        </Slider>\n        {/* <div style={{ textAlign: \"center\" }}>\n        <button className=\"button\" onClick={play}>\n          Play\n        </button>\n        <button className=\"button\" onClick={pause}>\n          Pause\n        </button>\n      </div> */}\n        {/* \n        <IconButton\n          aria-label=\"pause or play\"\n          className=\"play-pause-btn\"\n          title={playing ? `Pause slide show` : `Play slide show`}\n          onClick={() => {\n            playing ? pause() : play();\n            setPlaying(oldPlaying => !oldPlaying);\n          }}\n        >\n          {playing ? (\n            <PauseIcon fontSize=\"large\" />\n          ) : (\n            <PlayIcon fontSize=\"large\" />\n          )}\n        </IconButton> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Images;\n"]},"metadata":{},"sourceType":"module"}