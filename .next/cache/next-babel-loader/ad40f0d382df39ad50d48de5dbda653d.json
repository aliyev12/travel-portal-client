{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Map.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport mapboxgl from \"mapbox-gl\"; // pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\n\nmapboxgl.accessToken = \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\nvar geojson = {\n  type: \"FeatureCollection\",\n  features: [{\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-112.987418, 37.198125]\n    },\n    properties: {\n      description: \"Zion Canyon National Park\"\n    }\n  }, {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-111.376161, 36.86438]\n    },\n    properties: {\n      description: \"Antelope Canyon\"\n    }\n  }, {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-112.115763, 36.058973]\n    },\n    properties: {\n      description: \"Grand Canyon National Park\"\n    }\n  }, {\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: [-116.107963, 34.011646]\n    },\n    properties: {\n      description: \"Joshua Tree National Park\"\n    }\n  }]\n};\n\nvar Map =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Map, _Component);\n\n  function Map(props) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Map).call(this, props));\n    _this.state = {\n      lng: 5,\n      lat: 34,\n      zoom: 2\n    };\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var map = new mapboxgl.Map({\n        container: this.mapContainer,\n        scrollZoom: false,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        center: [this.state.lng, this.state.lat],\n        zoom: this.state.zoom\n      });\n      map.on(\"move\", function () {\n        _this2.setState({\n          lng: map.getCenter().lng.toFixed(4),\n          lat: map.getCenter().lat.toFixed(4),\n          zoom: map.getZoom().toFixed(2)\n        });\n      });\n      var bounds = new mapboxgl.LngLatBounds();\n      geojson.features.forEach(function (marker) {\n        var el = document.createElement(\"div\");\n        el.className = \"marker\";\n        new mapboxgl.Marker({\n          element: el,\n          anchor: \"bottom\"\n        }).setLngLat(marker.geometry.coordinates).addTo(map);\n        new mapboxgl.Popup({\n          offset: 30,\n          closeOnClick: false\n        }).setLngLat(marker.geometry.coordinates).setHTML(\"<p>\" + marker.properties.description + \"</p>\").addTo(map);\n        bounds.extend(marker.geometry.coordinates);\n      });\n      map.fitBounds(bounds, {\n        padding: {\n          top: 200,\n          bottom: 150,\n          left: 50,\n          right: 50\n        }\n      });\n      map.on(\"load\", function () {\n        map.addLayer({\n          id: \"route\",\n          type: \"line\",\n          source: {\n            type: \"geojson\",\n            data: {\n              type: \"Feature\",\n              properties: {},\n              geometry: {\n                type: \"LineString\",\n                coordinates: [[-112.987418, 37.198125], [-111.376161, 36.86438], [-112.115763, 36.058973], [-116.107963, 34.011646]]\n              }\n            }\n          },\n          layout: {\n            \"line-join\": \"round\",\n            \"line-cap\": \"round\"\n          },\n          paint: {\n            \"line-color\": \"#55c57a\",\n            \"line-opacity\": 0.6,\n            \"line-width\": 3\n          }\n        });\n      });\n    } // render() {\n    //   return (\n    //     <div>\n    //       <div\n    //         ref={el => (this.mapContainer = el)}\n    //         className=\"mapContainer\"\n    //         style={{\n    //           position: \"absolute\",\n    //           top: \"0\",\n    //           right: \"0\",\n    //           left: \"0\",\n    //           bottom: \"0\"\n    //         }}\n    //       />\n    //     </div>\n    //   );\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", {\n        style: {\n          position: \"relative\",\n          height: \"65rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"sidebarStyle\",\n        style: {\n          display: \"inline-block\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          margin: \"12px\",\n          backgroundColor: \"#404040\",\n          color: \"#ffffff\",\n          zIndex: \"1 !important\",\n          padding: \"6px\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Longitude: \", this.state.lng, \" | Latitude: \", this.state.lat, \" | Zoom:\", \" \", this.state.zoom)), __jsx(\"div\", {\n        ref: function ref(el) {\n          return _this3.mapContainer = el;\n        },\n        className: \"mapContainer\",\n        style: {\n          position: \"absolute\",\n          top: \"0\",\n          right: \"0\",\n          left: \"0\",\n          bottom: \"0\",\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nexport default Map; // import React, { Component } from \"react\";\n// import mapboxgl from \"mapbox-gl\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import \"mapbox-gl/dist/mapbox-gl.css\";\n// import ReactMapGL from 'react-map-gl';\n// /*\n// .marker {\n//   background-image: url('../img/pin.png');\n//   background-size: cover;\n//   width: 32px;\n//   height: 40px;\n//   cursor: pointer;\n// }\n// .mapboxgl-popup {\n//   max-width: 25rem;\n// }\n// .mapboxgl-popup-content {\n//   text-align: center;\n//   font-family: 'Lato', sans-serif;\n//   padding: 1.5rem !important;\n//   font-size: 1.4rem;\n//   -webkit-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n//   box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n// }\n// */\n// const useStyles = makeStyles(theme => ({\n//   Map: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     margin: \"5rem 0\",\n//     width: \"100%\",\n//     position: \"relative\",\n//     height: \"65rem\"\n//   },\n//   map: {\n//     position: \"absolute\",\n//     top: \"0\",\n//     right: \"0\",\n//     left: \"0\",\n//     bottom: \"0\",\n//     width: \"100%\"\n//   }\n// }));\n// const geojson = {\n//   type: \"FeatureCollection\",\n//   features: [\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.987418, 37.198125]\n//       },\n//       properties: {\n//         description: \"Zion Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-111.376161, 36.86438]\n//       },\n//       properties: {\n//         description: \"Antelope Canyon\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.115763, 36.058973]\n//       },\n//       properties: {\n//         description: \"Grand Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-116.107963, 34.011646]\n//       },\n//       properties: {\n//         description: \"Joshua Tree National Park\"\n//       }\n//     }\n//   ]\n// };\n// const Map = () => {\n//   const classes = useStyles();\n//   // const [lng, seLng] = React.useState(5);\n//   // const [lat, setLat] = React.useState(34);\n//   // const [zoom, setZoom] = React.useState(2);\n//   const [map, setMap] = React.useState(null);\n//   const mapContainer = React.useRef(null);\n//   React.useEffect(() => {\n//     mapboxgl.accessToken =\n//       \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n//     const initializeMap = ({ setMap, mapContainer }) => {\n//       const map = new mapboxgl.Map({\n//         container: mapContainer.current,\n//         style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n//         center: [0, 0],\n//         zoom: 5\n//       });\n//       map.on(\"load\", () => {\n//         setMap(map);\n//         map.resize();\n//       });\n//     };\n//     if (!map) initializeMap({ setMap, mapContainer });\n//   }, [map]);\n//   // const map = new mapboxgl.Map({\n//   //   container: mapContainer,\n//   //   scrollZoom: false,\n//   //   style: \"mapbox://styles/mapbox/streets-v11\",\n//   //   center: [state.lng, state.lat],\n//   //   zoom: state.zoom\n//   // });\n//   // map.on(\"move\", () => {\n//   //   seLng(map.getCenter().lng.toFixed(4));\n//   //   setLat(map.getCenter().lat.toFixed(4));\n//   //   setZoom(map.getZoom().toFixed(2));\n//   // });\n//   // const bounds = new mapboxgl.LngLatBounds();\n//   // geojson.features.forEach(function(marker) {\n//   //   var el = document.createElement(\"div\");\n//   //   el.className = \"marker\";\n//   //   new mapboxgl.Marker({\n//   //     element: el,\n//   //     anchor: \"bottom\"\n//   //   })\n//   //     .setLngLat(marker.geometry.coordinates)\n//   //     .addTo(map);\n//   //   new mapboxgl.Popup({\n//   //     offset: 30,\n//   //     closeOnClick: false\n//   //   })\n//   //     .setLngLat(marker.geometry.coordinates)\n//   //     .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n//   //     .addTo(map);\n//   //   bounds.extend(marker.geometry.coordinates);\n//   // });\n//   // map.fitBounds(bounds, {\n//   //   padding: {\n//   //     top: 200,\n//   //     bottom: 150,\n//   //     left: 50,\n//   //     right: 50\n//   //   }\n//   // });\n//   // map.on(\"load\", function() {\n//   //   map.addLayer({\n//   //     id: \"route\",\n//   //     type: \"line\",\n//   //     source: {\n//   //       type: \"geojson\",\n//   //       data: {\n//   //         type: \"Feature\",\n//   //         properties: {},\n//   //         geometry: {\n//   //           type: \"LineString\",\n//   //           coordinates: [\n//   //             [-112.987418, 37.198125],\n//   //             [-111.376161, 36.86438],\n//   //             [-112.115763, 36.058973],\n//   //             [-116.107963, 34.011646]\n//   //           ]\n//   //         }\n//   //       }\n//   //     },\n//   //     layout: {\n//   //       \"line-join\": \"round\",\n//   //       \"line-cap\": \"round\"\n//   //     },\n//   //     paint: {\n//   //       \"line-color\": \"#55c57a\",\n//   //       \"line-opacity\": 0.6,\n//   //       \"line-width\": 3\n//   //     }\n//   //   });\n//   // });\n//   return (\n//     <div className={classes.Map}>\n//       {/* <div\n//           className=\"sidebarStyle\"\n//           style={{\n//             display: \"inline-block\",\n//             position: \"absolute\",\n//             top: 0,\n//             left: 0,\n//             margin: \"12px\",\n//             backgroundColor: \"#404040\",\n//             color: \"#ffffff\",\n//             zIndex: \"1 !important\",\n//             padding: \"6px\",\n//             fontWeight: \"bold\"\n//           }}\n//         >\n//           <div>\n//             Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n//             {this.state.zoom}\n//           </div>\n//         </div> */}\n//       <div ref={el => (mapContainer.current = el)} className={classes.map} />\n//     </div>\n//   );\n// };\n// export default Map;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Map.js"],"names":["React","Component","mapboxgl","accessToken","geojson","type","features","geometry","coordinates","properties","description","Map","props","state","lng","lat","zoom","map","container","mapContainer","scrollZoom","style","center","on","setState","getCenter","toFixed","getZoom","bounds","LngLatBounds","forEach","marker","el","document","createElement","className","Marker","element","anchor","setLngLat","addTo","Popup","offset","closeOnClick","setHTML","extend","fitBounds","padding","top","bottom","left","right","addLayer","id","source","data","layout","paint","position","height","display","margin","backgroundColor","color","zIndex","fontWeight","width"],"mappings":"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":["import React, { Component } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\n// pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n\nconst geojson = {\n  type: \"FeatureCollection\",\n  features: [\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-112.987418, 37.198125]\n      },\n      properties: {\n        description: \"Zion Canyon National Park\"\n      }\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-111.376161, 36.86438]\n      },\n      properties: {\n        description: \"Antelope Canyon\"\n      }\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-112.115763, 36.058973]\n      },\n      properties: {\n        description: \"Grand Canyon National Park\"\n      }\n    },\n    {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [-116.107963, 34.011646]\n      },\n      properties: {\n        description: \"Joshua Tree National Park\"\n      }\n    }\n  ]\n};\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: 5,\n      lat: 34,\n      zoom: 2\n    };\n  }\n\n  componentDidMount() {\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      scrollZoom: false,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n\n    map.on(\"move\", () => {\n      this.setState({\n        lng: map.getCenter().lng.toFixed(4),\n        lat: map.getCenter().lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n\n    const bounds = new mapboxgl.LngLatBounds();\n\n    geojson.features.forEach(function(marker) {\n      var el = document.createElement(\"div\");\n      el.className = \"marker\";\n\n      new mapboxgl.Marker({\n        element: el,\n        anchor: \"bottom\"\n      })\n        .setLngLat(marker.geometry.coordinates)\n        .addTo(map);\n\n      new mapboxgl.Popup({\n        offset: 30,\n        closeOnClick: false\n      })\n        .setLngLat(marker.geometry.coordinates)\n        .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n        .addTo(map);\n\n      bounds.extend(marker.geometry.coordinates);\n    });\n\n    map.fitBounds(bounds, {\n      padding: {\n        top: 200,\n        bottom: 150,\n        left: 50,\n        right: 50\n      }\n    });\n\n    map.on(\"load\", function() {\n      map.addLayer({\n        id: \"route\",\n        type: \"line\",\n        source: {\n          type: \"geojson\",\n          data: {\n            type: \"Feature\",\n            properties: {},\n            geometry: {\n              type: \"LineString\",\n              coordinates: [\n                [-112.987418, 37.198125],\n                [-111.376161, 36.86438],\n                [-112.115763, 36.058973],\n                [-116.107963, 34.011646]\n              ]\n            }\n          }\n        },\n        layout: {\n          \"line-join\": \"round\",\n          \"line-cap\": \"round\"\n        },\n        paint: {\n          \"line-color\": \"#55c57a\",\n          \"line-opacity\": 0.6,\n          \"line-width\": 3\n        }\n      });\n    });\n  }\n\n  // render() {\n  //   return (\n  //     <div>\n  //       <div\n  //         ref={el => (this.mapContainer = el)}\n  //         className=\"mapContainer\"\n  //         style={{\n  //           position: \"absolute\",\n  //           top: \"0\",\n  //           right: \"0\",\n  //           left: \"0\",\n  //           bottom: \"0\"\n  //         }}\n  //       />\n  //     </div>\n  //   );\n  // }\n\n  render() {\n    return (\n      <div\n        style={{\n          position: \"relative\",\n          height: \"65rem\"\n        }}\n      >\n        <div\n          className=\"sidebarStyle\"\n          style={{\n            display: \"inline-block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: \"12px\",\n            backgroundColor: \"#404040\",\n            color: \"#ffffff\",\n            zIndex: \"1 !important\",\n            padding: \"6px\",\n            fontWeight: \"bold\"\n          }}\n        >\n          <div>\n            Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n            {this.state.zoom}\n          </div>\n        </div>\n        <div\n          ref={el => (this.mapContainer = el)}\n          className=\"mapContainer\"\n          style={{\n            position: \"absolute\",\n            top: \"0\",\n            right: \"0\",\n            left: \"0\",\n            bottom: \"0\",\n            width: \"100%\"\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Map;\n\n// import React, { Component } from \"react\";\n// import mapboxgl from \"mapbox-gl\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import \"mapbox-gl/dist/mapbox-gl.css\";\n\n// import ReactMapGL from 'react-map-gl';\n\n// /*\n// .marker {\n//   background-image: url('../img/pin.png');\n//   background-size: cover;\n//   width: 32px;\n//   height: 40px;\n//   cursor: pointer;\n// }\n\n// .mapboxgl-popup {\n//   max-width: 25rem;\n// }\n\n// .mapboxgl-popup-content {\n//   text-align: center;\n//   font-family: 'Lato', sans-serif;\n//   padding: 1.5rem !important;\n//   font-size: 1.4rem;\n//   -webkit-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n//   box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;\n// }\n// */\n\n// const useStyles = makeStyles(theme => ({\n//   Map: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     margin: \"5rem 0\",\n//     width: \"100%\",\n//     position: \"relative\",\n//     height: \"65rem\"\n//   },\n//   map: {\n//     position: \"absolute\",\n//     top: \"0\",\n//     right: \"0\",\n//     left: \"0\",\n//     bottom: \"0\",\n//     width: \"100%\"\n//   }\n// }));\n\n// const geojson = {\n//   type: \"FeatureCollection\",\n//   features: [\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.987418, 37.198125]\n//       },\n//       properties: {\n//         description: \"Zion Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-111.376161, 36.86438]\n//       },\n//       properties: {\n//         description: \"Antelope Canyon\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-112.115763, 36.058973]\n//       },\n//       properties: {\n//         description: \"Grand Canyon National Park\"\n//       }\n//     },\n//     {\n//       type: \"Feature\",\n//       geometry: {\n//         type: \"Point\",\n//         coordinates: [-116.107963, 34.011646]\n//       },\n//       properties: {\n//         description: \"Joshua Tree National Park\"\n//       }\n//     }\n//   ]\n// };\n\n// const Map = () => {\n//   const classes = useStyles();\n//   // const [lng, seLng] = React.useState(5);\n//   // const [lat, setLat] = React.useState(34);\n//   // const [zoom, setZoom] = React.useState(2);\n//   const [map, setMap] = React.useState(null);\n//   const mapContainer = React.useRef(null);\n\n//   React.useEffect(() => {\n//     mapboxgl.accessToken =\n//       \"pk.eyJ1IjoiZGV2N2M0IiwiYSI6ImNrNnpxenl5eTB2bHczZW15MzBhM3dyODYifQ.Y7JGKPXPwGMFuSQSyQaZaw\";\n//     const initializeMap = ({ setMap, mapContainer }) => {\n//       const map = new mapboxgl.Map({\n//         container: mapContainer.current,\n//         style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n//         center: [0, 0],\n//         zoom: 5\n//       });\n\n//       map.on(\"load\", () => {\n//         setMap(map);\n//         map.resize();\n//       });\n//     };\n\n//     if (!map) initializeMap({ setMap, mapContainer });\n//   }, [map]);\n\n//   // const map = new mapboxgl.Map({\n//   //   container: mapContainer,\n//   //   scrollZoom: false,\n//   //   style: \"mapbox://styles/mapbox/streets-v11\",\n//   //   center: [state.lng, state.lat],\n//   //   zoom: state.zoom\n//   // });\n\n//   // map.on(\"move\", () => {\n//   //   seLng(map.getCenter().lng.toFixed(4));\n//   //   setLat(map.getCenter().lat.toFixed(4));\n//   //   setZoom(map.getZoom().toFixed(2));\n//   // });\n\n//   // const bounds = new mapboxgl.LngLatBounds();\n\n//   // geojson.features.forEach(function(marker) {\n//   //   var el = document.createElement(\"div\");\n//   //   el.className = \"marker\";\n\n//   //   new mapboxgl.Marker({\n//   //     element: el,\n//   //     anchor: \"bottom\"\n//   //   })\n//   //     .setLngLat(marker.geometry.coordinates)\n//   //     .addTo(map);\n\n//   //   new mapboxgl.Popup({\n//   //     offset: 30,\n//   //     closeOnClick: false\n//   //   })\n//   //     .setLngLat(marker.geometry.coordinates)\n//   //     .setHTML(\"<p>\" + marker.properties.description + \"</p>\")\n//   //     .addTo(map);\n\n//   //   bounds.extend(marker.geometry.coordinates);\n//   // });\n\n//   // map.fitBounds(bounds, {\n//   //   padding: {\n//   //     top: 200,\n//   //     bottom: 150,\n//   //     left: 50,\n//   //     right: 50\n//   //   }\n//   // });\n\n//   // map.on(\"load\", function() {\n//   //   map.addLayer({\n//   //     id: \"route\",\n//   //     type: \"line\",\n//   //     source: {\n//   //       type: \"geojson\",\n//   //       data: {\n//   //         type: \"Feature\",\n//   //         properties: {},\n//   //         geometry: {\n//   //           type: \"LineString\",\n//   //           coordinates: [\n//   //             [-112.987418, 37.198125],\n//   //             [-111.376161, 36.86438],\n//   //             [-112.115763, 36.058973],\n//   //             [-116.107963, 34.011646]\n//   //           ]\n//   //         }\n//   //       }\n//   //     },\n//   //     layout: {\n//   //       \"line-join\": \"round\",\n//   //       \"line-cap\": \"round\"\n//   //     },\n//   //     paint: {\n//   //       \"line-color\": \"#55c57a\",\n//   //       \"line-opacity\": 0.6,\n//   //       \"line-width\": 3\n//   //     }\n//   //   });\n//   // });\n\n//   return (\n//     <div className={classes.Map}>\n//       {/* <div\n//           className=\"sidebarStyle\"\n//           style={{\n//             display: \"inline-block\",\n//             position: \"absolute\",\n//             top: 0,\n//             left: 0,\n//             margin: \"12px\",\n//             backgroundColor: \"#404040\",\n//             color: \"#ffffff\",\n//             zIndex: \"1 !important\",\n//             padding: \"6px\",\n//             fontWeight: \"bold\"\n//           }}\n//         >\n//           <div>\n//             Longitude: {this.state.lng} | Latitude: {this.state.lat} | Zoom:{\" \"}\n//             {this.state.zoom}\n//           </div>\n//         </div> */}\n//       <div ref={el => (mapContainer.current = el)} className={classes.map} />\n//     </div>\n//   );\n// };\n\n// export default Map;\n"]},"metadata":{},"sourceType":"module"}