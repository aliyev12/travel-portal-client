{"ast":null,"code":"var _jsxFileName = \"/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Tour.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { TourFragment } from \"../home/TourCards\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Cover from \"./Cover\";\nimport QuickFacts from \"./QuickFacts\";\nimport TourGuides from \"./TourGuides\";\nimport About from \"./About\";\nimport Images from \"./Images\";\nimport Map from \"./Map\";\nimport Reviews from \"./Reviews\";\nimport Prompt from \"./Prompt\";\nconst TOUR = gql`\n  query TOUR($slug: String!) {\n    getTour(slug: $slug) {\n      ...TourFragment\n    }\n  }\n  ${TourFragment}\n`;\nconst useStyles = makeStyles(theme => ({\n  Tour: {},\n  infoSection: {\n    display: \"flex\",\n    minHeight: \"30rem\"\n  },\n  factsAndGuides: {\n    display: \"flex\",\n    width: \"50%\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\n\nconst Tour = ({\n  slug\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(TOUR, {\n    variables: {\n      slug\n    }\n  });\n  const classes = useStyles();\n  console.log(\"Toud data = \", data);\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Loading ...\");\n\n  if (data && data.getTour) {\n    const {\n      name,\n      price,\n      createdAt,\n      summary,\n      imageCover,\n      difficulty,\n      duration,\n      startDates,\n      startLocation,\n      description,\n      locations,\n      maxGroupSize,\n      rating,\n      ratingsQuantity,\n      ratingsAverage\n    } = data.getTour;\n    return __jsx(\"main\", {\n      className: classes.Tour,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(Cover, {\n      imageCover: imageCover,\n      name: name,\n      duration: duration,\n      startLocation: startLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: classes.infoSection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.factsAndGuides,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(QuickFacts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), __jsx(TourGuides, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), __jsx(About, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), __jsx(Images, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), __jsx(Map, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), __jsx(Reviews, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), __jsx(Prompt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n};\n\nexport default Tour;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/travel-portal/client/components/tour/Tour.tsx"],"names":["React","useQuery","gql","TourFragment","makeStyles","Cover","QuickFacts","TourGuides","About","Images","Map","Reviews","Prompt","TOUR","useStyles","theme","Tour","infoSection","display","minHeight","factsAndGuides","width","flexDirection","justifyContent","alignItems","slug","loading","error","data","variables","classes","console","log","getTour","name","price","createdAt","summary","imageCover","difficulty","duration","startDates","startLocation","description","locations","maxGroupSize","rating","ratingsQuantity","ratingsAverage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { TourFragment } from \"../home/TourCards\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Cover from \"./Cover\";\nimport QuickFacts from \"./QuickFacts\";\nimport TourGuides from \"./TourGuides\";\nimport About from \"./About\";\nimport Images from \"./Images\";\nimport Map from \"./Map\";\nimport Reviews from \"./Reviews\";\nimport Prompt from \"./Prompt\";\n\ninterface Props {\n  slug: string | string[];\n}\n\nconst TOUR = gql`\n  query TOUR($slug: String!) {\n    getTour(slug: $slug) {\n      ...TourFragment\n    }\n  }\n  ${TourFragment}\n`;\n\nconst useStyles = makeStyles(theme => ({\n  Tour: {},\n  infoSection: {\n    display: \"flex\",\n    minHeight: \"30rem\"\n  },\n  factsAndGuides: {\n    display: \"flex\",\n    width: \"50%\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n}));\n\nconst Tour: React.FC<Props> = ({ slug }) => {\n  const { loading, error, data } = useQuery(TOUR, { variables: { slug } });\n  const classes = useStyles();\n  console.log(\"Toud data = \", data);\n\n  if (loading) return <p>Loading ...</p>;\n\n  if (data && data.getTour) {\n    const {\n      name,\n      price,\n      createdAt,\n      summary,\n      imageCover,\n      difficulty,\n      duration,\n      startDates,\n      startLocation,\n      description,\n      locations,\n      maxGroupSize,\n      rating,\n      ratingsQuantity,\n      ratingsAverage\n    } = data.getTour;\n\n    return (\n      <main className={classes.Tour}>\n        <Cover\n          imageCover={imageCover}\n          name={name}\n          duration={duration}\n          startLocation={startLocation}\n        />\n        <div className={classes.infoSection}>\n          <div className={classes.factsAndGuides}>\n            <QuickFacts />\n            <TourGuides />\n          </div>\n          <About />\n        </div>\n        <Images />\n        <Map />\n        <Reviews />\n        <Prompt />\n      </main>\n    );\n  }\n};\n\nexport default Tour;\n"]},"metadata":{},"sourceType":"module"}